import{_ as s,o as n,c as a,S as l}from"./chunks/framework.b12503b9.js";const i=JSON.parse('{"title":"高可用的 TCP 数据传输服务器","description":"","frontmatter":{},"headers":[],"relativePath":"5、运维/Netty.md","filePath":"5、运维/Netty.md"}'),p={name:"5、运维/Netty.md"},o=l(`<h1 id="高可用的-tcp-数据传输服务器" tabindex="-1">高可用的 TCP 数据传输服务器 <a class="header-anchor" href="#高可用的-tcp-数据传输服务器" aria-label="Permalink to &quot;高可用的 TCP 数据传输服务器&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njc5NjM1NQ==&amp;mid=2247530518&amp;idx=2&amp;sn=9ef03514050f141d118277458c5e9b7f&amp;chksm=ebd5473adca2ce2c0bc857e67fe8d702cd33f5f2f5505013b9ea662d4c555972eeaff9139490&amp;mpshare=1&amp;scene=23&amp;srcid=1113lpa0jpMzb6Y4z8UTq7BO&amp;sharer_sharetime=1668269827908&amp;sharer_shareid=29b8a04db1dbd975e3bf4e9f47e7ac67#rd" target="_blank" rel="noreferrer">实现一款高可用的 TCP 数据传输服务器（Java版） (qq.com)</a></p><h2 id="_1-netty能做什么" tabindex="-1">1.netty能做什么 <a class="header-anchor" href="#_1-netty能做什么" aria-label="Permalink to &quot;1.netty能做什么&quot;">​</a></h2><p>首先netty是一款高性能、封装性良好且灵活、基于NIO(真·非阻塞IO)的开源框架。可以用来手写web服务器、TCP服务器等，支持的协议丰富，如：常用的HTTP/HTTPS/WEBSOCKET，并且提供的大量的方法，十分灵活，可以根据自己的需求量身DIV一款服务器。</p><p>用netty编写TCP的服务器/客户端</p><p>1.可以自己设计数据传输协议如下面这样：</p><img src="https://edu-8673.oss-cn-beijing.aliyuncs.com/img2022.12.30/202211131127850.png" alt="image-20221113112758800" style="zoom:67%;"><p>2.可以自定义编码规则和解码规则</p><p>3.可以自定义客户端与服务端的数据交互细节，处理socket流攻击、TCP的粘包和拆包问题</p><h2 id="_2-quick-start" tabindex="-1">2.Quick Start <a class="header-anchor" href="#_2-quick-start" aria-label="Permalink to &quot;2.Quick Start&quot;">​</a></h2><p>创建一个普通的maven项目，不依赖任何的三方web服务器，用main方法执行即可。</p><img src="https://edu-8673.oss-cn-beijing.aliyuncs.com/img2022.12.30/202211131128981.png" alt="image-20221113112809936" style="zoom:80%;"><p>加入POM依赖</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--netty的依赖集合，都整合在一个依赖里面了--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">io.netty</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">netty-all</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">4.1.6.Final</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--这里使用jackson反序列字节码--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">com.fasterxml.jackson.core</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">jackson-databind</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2.9.7</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--加入log4j 便于深入学习整合运行过程的一些细节--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">log4j</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">log4j</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">1.2.17</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>设计一套基于TCP的数据传输协议</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TcpProtocol</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> header</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0x58</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> tail</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0x63</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getTail</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> tail</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setTail</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">tail</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tail</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TcpProtocol</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">len </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TcpProtocol</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getHeader</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> header</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setHeader</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">header</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">header </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> header</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getLen</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setLen</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">len </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getData</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setData</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这里使用16进制表示协议的开始位和结束位，其中0x58代表开始，0x63代表结束，均用一个字节来进行表示。</p><p>TCP服务器的启动类</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TcpServer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> port</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Logger</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLogger</span><span style="color:#89DDFF;">(this.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">正在启动tcp服务器……</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">NioEventLoopGroup</span><span style="color:#A6ACCD;"> boss </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NioEventLoopGroup</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//主线程组</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">NioEventLoopGroup</span><span style="color:#A6ACCD;"> work </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NioEventLoopGroup</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//工作线程组</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">ServerBootstrap</span><span style="color:#A6ACCD;"> bootstrap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ServerBootstrap</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//引导对象</span></span>
<span class="line"><span style="color:#A6ACCD;">            bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">group</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">boss</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">work</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//配置工作线程组</span></span>
<span class="line"><span style="color:#A6ACCD;">            bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">channel</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NioServerSocketChannel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//配置为NIO的socket通道</span></span>
<span class="line"><span style="color:#A6ACCD;">            bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">childHandler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ChannelInitializer</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">SocketChannel</span><span style="color:#89DDFF;">&gt;()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initChannel</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">SocketChannel</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ch</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//绑定通道参数</span></span>
<span class="line"><span style="color:#A6ACCD;">                    ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logging</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LoggingHandler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBUG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;">//设置log监听器，并且日志级别为debug，方便观察运行流程</span></span>
<span class="line"><span style="color:#A6ACCD;">                    ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">encode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EncoderHandler</span><span style="color:#89DDFF;">());</span><span style="color:#676E95;font-style:italic;">//编码器。发送消息时候用过</span></span>
<span class="line"><span style="color:#A6ACCD;">                    ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">decode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DecoderHandler</span><span style="color:#89DDFF;">());</span><span style="color:#676E95;font-style:italic;">//解码器，接收消息时候用</span></span>
<span class="line"><span style="color:#A6ACCD;">                    ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">handler</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BusinessHandler</span><span style="color:#89DDFF;">());</span><span style="color:#676E95;font-style:italic;">//业务处理类，最终的消息会在这个handler中进行业务处理</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">            bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ChannelOption</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SO_BACKLOG</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//缓冲区</span></span>
<span class="line"><span style="color:#A6ACCD;">            bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">childOption</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ChannelOption</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SO_KEEPALIVE</span><span style="color:#89DDFF;">,true);</span><span style="color:#676E95;font-style:italic;">//ChannelOption对象设置TCP套接字的参数，非必须步骤</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">ChannelFuture</span><span style="color:#A6ACCD;"> future </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">port</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">sync</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//使用了Future来启动线程，并绑定了端口</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">启动tcp服务器启动成功，正在监听端口:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">port</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            future</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">channel</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">closeFuture</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">sync</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//以异步的方式关闭端口</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InterruptedException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">启动出现异常：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            work</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdownGracefully</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            boss</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdownGracefully</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//出现异常后，关闭线程组</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tcp服务器已经关闭</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TcpServer</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">8777</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TcpServer</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">port</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">port </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> port</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>只要是基于netty的服务器，都会用到bootstrap 并用这个对象绑定工作线程组，channel的Class，以及用户DIV的各种pipeline的handler类，注意在添加自定义handler的时候，数据的流动顺序和pipeline中添加hanlder的顺序是一致的。也就是说，从上往下应该为：底层字节流的解码/编码handler、业务处理handler。</p><h5 id="编码器" tabindex="-1">编码器 <a class="header-anchor" href="#编码器" aria-label="Permalink to &quot;编码器&quot;">​</a></h5><p>编码器是服务器按照协议格式返回数据给客户端时候调用的，继承<code>MessageToByteEncoder</code>代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EncoderHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MessageToByteEncoder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Logger</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLogger</span><span style="color:#89DDFF;">(this.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ByteBuf</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">out</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> TcpProtocol</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">TcpProtocol</span><span style="color:#A6ACCD;"> protocol </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TcpProtocol</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">protocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHeader</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeInt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">protocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLen</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">protocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getData</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">protocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTail</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据编码成功：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">不支持的数据协议：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">()+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\t</span><span style="color:#C3E88D;">期待的数据协议类是：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">TcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="解码器" tabindex="-1">解码器 <a class="header-anchor" href="#解码器" aria-label="Permalink to &quot;解码器&quot;">​</a></h5><p>解码器属于比较核心的部分，自定义解码协议、粘包、拆包等都在里面实现，继承自<code>ByteToMessageDecoder</code>，其实<code>ByteToMessageDecoder</code>的内部已经帮我们处理好了拆包/粘包的问题，只需要按照它的设计原则去实现decode方法即可：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DecoderHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ByteToMessageDecoder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//最小的数据长度：开头标准位1字节</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> MIN_DATA_LEN</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//数据解码协议的开始标志</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> PROTOCOL_HEADER</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0x58</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//数据解码协议的结束标志</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> PROTOCOL_TAIL</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0x63</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Logger</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLogger</span><span style="color:#89DDFF;">(this.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ByteBuf</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">in</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Object</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">out</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">()&gt;</span><span style="color:#A6ACCD;">MIN_DATA_LEN</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">开始解码数据……</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//标记读操作的指针</span></span>
<span class="line"><span style="color:#A6ACCD;">            in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">markReaderIndex</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> header</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readByte</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">PROTOCOL_HEADER</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据开头格式正确</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">//读取字节数据的长度</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readInt</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">//数据可读长度必须要大于len，因为结尾还有一字节的解释标志位</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">()){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据长度不够，数据协议len长度为：%1$d,数据包实际可读内容为：%2$d正在等待处理拆包……</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">()));</span></span>
<span class="line"><span style="color:#A6ACCD;">                    in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resetReaderIndex</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                    **结束解码，这种情况说明数据没有到齐，在父类ByteToMessageDecoder的callDecode中会对out和in进行判断</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                    * 如果in里面还有可读内容即in.isReadable为true,cumulation中的内容会进行保留，，直到下一次数据到来，将两帧的数据合并起来，再解码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                    * 以此解决拆包问题</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                     */</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">                in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//读取核心的数据</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> tail</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readByte</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tail</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">PROTOCOL_TAIL</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据解码成功</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                    </span><span style="color:#676E95;font-style:italic;">//如果out有值，且in仍然可读，将继续调用decode方法再次解码in中的内容，以此解决粘包问题</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据解码协议结束标志位:%1$d [错误!]，期待的结束标志位是：%2$d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">tail</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">PROTOCOL_TAIL</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">开头不对，可能不是期待的客服端发送的数，将自动略过这一个字节</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据长度不符合要求，期待最小长度是：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">MIN_DATA_LEN</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> 字节</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>首先是黏包问题：</p><p>如图，正常的数据传输应该是像数据A那样，一包就是一个完整的数据，但也有不正常的情况，比如一包数据包含多个数据。而在<code>ByteToMessageDecoder</code>会默认把二进制的字节码放在byteBuf中，因此我们在code的时候要知道会有这样的场景。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbudRJmHvGnvWpwCRgblURETRPCrhvZVh8ymydtgvvaibGOj1CyicCklHibvQCPMlTmIUzFeBFvqWFU6Dg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>而粘包问题实际上不需要我们去解决，下面是<code>ByteToMessageDecoder</code>的源码，<code>callDecode</code>中回调我们手写解码器的decode方法。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">callDecode</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ByteBuf</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isReadable</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//buf中是否还有数据</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> outSize </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//标记out的size，解析成功的数据会添加的out中</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">outSize </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">fireChannelRead</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> outSize</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//这个是回调业务handler的channelRead方法</span></span>
<span class="line"><span style="color:#A6ACCD;">                out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isRemoved</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                outSize </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//清空了out，将标记size清零</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> oldInputLength </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">//这里开始准备调用decode方法，标记了解码前的可读内容</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//对应DecoderHandler中的decode方法</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isRemoved</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">outSize </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//相等说明，并没有解析出来新的object到out中</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">oldInputLength </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//这里很重要，若相等说明decode中没有读取任何内容出来，这里一般是发生拆包后，将ByteBuf的指针手动重置。重置后从这个方法break出来。让ByteToMessageDecoder去处理拆包问题。这里就体现了要按照netty的设计原则来写代码                       </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">continue</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//这里直接continue，是考虑让开发者去跳过某些字节，比如收到了socket攻击时，数据不按照协议体来的时候，就直接跳过这些字节</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">oldInputLength </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//这种情况属于，没有按照netty的设计原则来。要么是decode中没有任何逻辑代码，要么是在out中添加了内容后，调用了byteBuf的resetReaderIndex重置的读操作的指针</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DecoderException</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                        StringUtil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">simpleClassName</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.decode() did not read anything but decoded a message.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">isSingleDecode</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//默认为false，用来设置只解析一条数据</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//这里结束后，继续wile循环，因为bytebuf仍然有可读的内容，将会继续调用decode方法解析bytebuf中的字节码，以此解决了粘包问题</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">DecoderException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">cause</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DecoderException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cause</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>综合上面的源码分析后，我们发现：decode方法在while循环中，也就是bytebuf只要有内容就会一直调用decode方法进行解码操作，因此在解决粘包问题时，只需要按照正常流程来就行了，解析协议开头、数据字节、结束标志后将数据放入到out这个list中即可。后面将会有数据进行粘包测试。</p><p><strong>拆包问题</strong></p><p>有时候，我们接收到的数据是不完整的，一个包的数据被拆成了很多份被后再发送出去。这种情况有可能是数据太大，被分割成很多份发送出去。比如数据包B被拆成两份进行发送：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbudRJmHvGnvWpwCRgblURETROk82JpxJ2jrFkQAVnbUBWo6UU9O0KvDNROdoG35Z2JF3ibw7HN7kJHQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>拆包问题，同样在<code>ByteToMessageDecoder</code> 给我们解决了，我们只需要按照netty的设计原则去写decode代码即可。</p><p>首先，假设需要我们自己去解决拆包问题应该怎么实现？</p><p>先从问题开始分析，需要的是数据B，但是却只收到了数据B_1，这个时候应该等待剩余的数据B_2的到来，收到的数据B_1应该用一个累加器存起来，等到B_2到来的时候将两包数据合并起来再进行解码。</p><p>那么问题是，如何让<code>ByteToMessageDecoder</code>这个知道数据不完整呢，在<code>DecoderHandler.decode</code>中有这样一段代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">()){</span></span>
<span class="line"><span style="color:#A6ACCD;">    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数据长度不够，数据协议len长度为：%1$d,数据包实际可读内容为：%2$d正在等待处理拆包……</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">()));</span></span>
<span class="line"><span style="color:#A6ACCD;">    in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resetReaderIndex</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    **结束解码，这种情况说明数据没有到齐，在父类ByteToMessageDecoder的callDecode中会对out和in进行判断</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    * 如果in里面还有可读内容即in.isReadable为true,cumulation中的内容会进行保留，，直到下一次数据到来，将两帧的数据合并起来，再解码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    * 以此解决拆包问题</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>当读到协议中的len大于bytebuf的可读内容时候说明数据不完整，发生了拆包，调用<code>resetReaderIndex</code>将读操作指针复位，并结束方法。再看看父类中的<code>CallDecode</code>方法的一段代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">outSize </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//相等说明，并没有解析出来新的object到out中</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">oldInputLength </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readableBytes</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//这里很重要，若相等说明decode中没有读取任何内容出来，这里一般是发生拆包后，将ByteBuf的指针手动重置。重置后从这个方法break出来。让ByteToMessageDecoder去处理拆包问题。这里就体现了要按照netty的设计原则来写代码                       </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//退出该方法</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">continue</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//这里直接continue，是考虑让开发者去跳过某些字节，比如收到了socket攻击时，数据不按照协议体来的时候，就直接跳过这些字节</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>退出<code>callDecode</code>后，返回到<code>channelRead</code>中：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">channelRead</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> throws Exception </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> ByteBuf</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">CodecOutputList</span><span style="color:#A6ACCD;"> out </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> CodecOutputList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">newInstance</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">ByteBuf</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ByteBuf</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            first </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cumulation </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">first</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                cumulation </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                cumulation </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cumulator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cumulate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> cumulation</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">callDecode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cumulation</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//注意这里传入的不是data，而是cumulator，这个对象相当于一个累加器，也就是说每次调用callDecode的时候传入的byteBuf实际上是经过累加后的cumulation</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">DecoderException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DecoderException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cumulation </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">cumulation</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isReadable</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">//这里若是数据被读取完，会清空累加器cumulation</span></span>
<span class="line"><span style="color:#A6ACCD;">                numReads </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                cumulation</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                cumulation </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(++</span><span style="color:#A6ACCD;"> numReads </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> discardAfterReads</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// We did enough reads already try to discard some bytes so we not risk to see a OOME.</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// See https://github.com/netty/netty/issues/4275</span></span>
<span class="line"><span style="color:#A6ACCD;">                numReads </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">discardSomeReadBytes</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            decodeWasNull </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insertSinceRecycled</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">fireChannelRead</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> out</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> size</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recycle</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fireChannelRead</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>而<code>channelRead</code>方法是，收到一包数据后就会调用一次。至此，netty帮我们完美解决了拆包问题。我们只需要按着他的设计原则：<code>len&gt;byteBuf.readableBytes</code>时候，重置读指针，结束decode即可。</p><h5 id="业务处理handler类" tabindex="-1">业务处理handler类 <a class="header-anchor" href="#业务处理handler类" aria-label="Permalink to &quot;业务处理handler类&quot;">​</a></h5><p>这一层中数据已经被完整的解析出来了，可以直接使用了：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BusinessHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ChannelInboundHandlerAdapter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ObjectMapper</span><span style="color:#A6ACCD;"> objectMapper</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ByteUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">InstanceObjectMapper</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Logger</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLogger</span><span style="color:#89DDFF;">(this.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">channelRead</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]){</span></span>
<span class="line"><span style="color:#A6ACCD;">            logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">解码后的字节码：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[])</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> objectContainer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> objectMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readValue</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[])</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DTObject</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">objectContainer </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> DTObject</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#C792EA;">DTObject</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">DTObject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> objectContainer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClassName</span><span style="color:#89DDFF;">()!=null&amp;&amp;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getObject</span><span style="color:#89DDFF;">().</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> object </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> objectMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readValue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getObject</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> Class</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClassName</span><span style="color:#89DDFF;">()));</span></span>
<span class="line"><span style="color:#A6ACCD;">                        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">收到实体对象：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">object</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">                logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">对象反序列化出现问题：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>由于在decode中并没有将字节码反序列成对象，因此需要进一步反序列化。在传输数据的时候，可能传递的对象不只是一种，因此在反序列化也要考虑到这一问题。解决办法是将传输的对象进行二次包装，将全名类信息包含进去：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">public class DTObject {</span></span>
<span class="line"><span style="color:#A6ACCD;">    private String className;</span></span>
<span class="line"><span style="color:#A6ACCD;">    private byte[] object;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>这样在反序列化的时候使用<code>Class.forName()</code>获取Class，避免了要写很多if循环判断反序列化的对象的Class。前提是要类名和包路径要完全匹配！</p><h5 id="接下来编写一个tcp客户端进行测试" tabindex="-1">接下来编写一个TCP客户端进行测试 <a class="header-anchor" href="#接下来编写一个tcp客户端进行测试" aria-label="Permalink to &quot;接下来编写一个TCP客户端进行测试&quot;">​</a></h5><p>启动类的init方法:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> throws InterruptedException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">NioEventLoopGroup</span><span style="color:#A6ACCD;"> group </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NioEventLoopGroup</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Bootstrap</span><span style="color:#A6ACCD;"> bootstrap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Bootstrap</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">group</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">group</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">channel</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NioSocketChannel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ChannelOption</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SO_KEEPALIVE</span><span style="color:#89DDFF;">,true);</span></span>
<span class="line"><span style="color:#A6ACCD;">    bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">handler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ChannelInitializer</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initChannel</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Channel</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ch</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logging</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LoggingHandler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBUG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">            ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EncoderHandler</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EchoHandler</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remoteAddress</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ip</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">port</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ChannelFuture</span><span style="color:#A6ACCD;"> future </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">sync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        future</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">channel</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">closeFuture</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">sync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InterruptedException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">printStackTrace</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        group</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdownGracefully</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">sync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>客户端的handler：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EchoHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ChannelInboundHandlerAdapter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//连接成功后发送消息测试</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">channelActive</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setBirthday</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUID</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">UUID</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">randomUUID</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">冉鹏峰</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAge</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">DTObject</span><span style="color:#A6ACCD;"> dtObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DTObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        dtObject</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setClassName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        dtObject</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ByteUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">InstanceObjectMapper</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">writeValueAsBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">TcpProtocol</span><span style="color:#A6ACCD;"> tcpProtocol </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TcpProtocol</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> objectBytes</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ByteUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">InstanceObjectMapper</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">writeValueAsBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dtObject</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setLen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">objectBytes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">objectBytes</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flush</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这个handler是为了模拟在TCP连接建立好之后发送一包的数据到服务端经行测试，通过channel的write去发送数据，只要在启动类TcpClient配置了编码器的<code>EncoderHandler</code>，就可以直接将对象<code>tcpProtocol</code>传进去，它将在<code>EncoderHandler</code>的encode方法中被自动转换成字节码放入bytebuf中。</p><p>正常数据传输测试：</p><p>结果：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">34</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 开始解码数据……</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">34</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据开头格式正确</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">34</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据解码成功</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">34</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 解码后的字节码：</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA0OjMwOjE0IiwidWlkIjoiOGY0OTM0OGEtMWNmMy00ZTEyLWEzZTAtY2M1ZTJjZTkzMDdlIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">34</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">INFO</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 收到实体对象：User</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">冉鹏峰</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UID</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">8f49348a-1cf3-4e12-a3e0-cc5e2ce9307e</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> birthday</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">Mon</span><span style="color:#A6ACCD;"> Jan </span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">04</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> CST </span><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>可以看到最终的实体对象User被成功的解析出来。</p><p>在debug模式下还会看到这样的一个表格在控制台输出：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">+-------------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">  a  b  c  d  e  f </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">00000000</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">58</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> b5 7b </span><span style="color:#F78C6C;">22</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">63</span><span style="color:#A6ACCD;"> 6c </span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span><span style="color:#A6ACCD;"> 4e </span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6d</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C792EA;">X</span><span style="color:#89DDFF;">....{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000010| 22 3a 22 70 6f 6a 6f 2e 55 73 65 72 22 2c 22 6f |</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">o|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000020| 62 6a 65 63 74 22 3a 22 65 79 4a 75 59 57 31 6c |bject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1l|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000030| 49 6a 6f 69 35 59 61 4a 36 62 6d 50 35 62 4f 77 |Ijoi5YaJ6bmP5bOw|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000040| 49 69 77 69 59 57 64 6c 49 6a 6f 79 4e 43 77 69 |IiwiYWdlIjoyNCwi|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000050| 59 6d 6c 79 64 47 68 6b 59 58 6b 69 4f 69 49 79 |YmlydGhkYXkiOiIy|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000060| 4d 44 45 35 4c 7a 41 78 4c 7a 45 30 49 44 41 30 |MDE5LzAxLzE0IDA0|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000070| 4f 6a 4d 77 4f 6a 45 30 49 69 77 69 64 57 6c 6b |OjMwOjE0IiwidWlk|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000080| 49 6a 6f 69 4f 47 59 30 4f 54 4d 30 4f 47 45 74 |IjoiOGY0OTM0OGEt|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000090| 4d 57 4e 6d 4d 79 30 30 5a 54 45 79 4c 57 45 7a |MWNmMy00ZTEyLWEz|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000a0| 5a 54 41 74 59 32 4d 31 5a 54 4a 6a 5a 54 6b 7a |ZTAtY2M1ZTJjZTkz|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000b0| 4d 44 64 6c 49 6e 30 3d 22 7d 63                |MDdlIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">c     </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">+--------+-------------------------------------------------+----------------+</span></span></code></pre></div><p>这个是相当于真实的数据抓包展示，数据被转换成字节码后是以二进制的形式在TCP缓存区冲传输过来。但是二进制太长了，所以一般都是转换成16进制显示的，一个表格显示一个字节的数据，数据由地位到高位由左到右，由上到下进行排列。</p><p>其中0x58为<code>TcpProtocol</code>中设置的开始标志，00 00 00 b5为数据的长度，因为是int类型所以占用了四个字节从7b--7d内容为要传输的数据内容，结尾的0x63为<code>TcpProtocol</code>设置的结束标志位。</p><h5 id="粘包测试" tabindex="-1">粘包测试 <a class="header-anchor" href="#粘包测试" aria-label="Permalink to &quot;粘包测试&quot;">​</a></h5><p>为了模拟粘包，首先将启动类<code>TcpClient</code>中配置的编码器的<code>EncoderHandler</code>注释掉：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bootstrap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">handler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ChannelInitializer</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initChannel</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Channel</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ch</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logging</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LoggingHandler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBUG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//ch.pipeline().addLast(new EncoderHandler()); 因为需要在byteBuf中手动模拟粘包的场景</span></span>
<span class="line"><span style="color:#A6ACCD;">        ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pipeline</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">addLast</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EchoHandler</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>然后在发送的时候故意将三帧的数据，放在一个包中就行发送，在<code>EchoHanlder</code>做如下修改：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">channelActive</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ChannelHandlerContext</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> throws Exception </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setBirthday</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUID</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">UUID</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">randomUUID</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">冉鹏峰</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAge</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">DTObject</span><span style="color:#A6ACCD;"> dtObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DTObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        dtObject</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setClassName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        dtObject</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ByteUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">InstanceObjectMapper</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">writeValueAsBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">TcpProtocol</span><span style="color:#A6ACCD;"> tcpProtocol </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TcpProtocol</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> objectBytes</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ByteUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">InstanceObjectMapper</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">writeValueAsBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dtObject</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setLen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">objectBytes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">objectBytes</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">ByteBuf</span><span style="color:#A6ACCD;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">buffer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHeader</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeInt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLen</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getData</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTail</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//模拟粘包的第二帧数据</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHeader</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeInt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLen</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getData</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTail</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//模拟粘包的第三帧数据</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHeader</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeInt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLen</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getData</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeByte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tcpProtocol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTail</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flush</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>运行结果：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 开始解码数据……</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据开头格式正确</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据解码成功</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 解码后的字节码：</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA0OjQ0OjE0IiwidWlkIjoiODFkZTU5YWUtMzQ4Mi00ZDFhLWJjNDMtN2NjMTJmOTI1ZTUxIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">INFO</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 收到实体对象：User</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">冉鹏峰</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UID</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">81de59ae-3482-4d1a-bc43-7cc12f925e51</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> birthday</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">Mon</span><span style="color:#A6ACCD;"> Jan </span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">04</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> CST </span><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 开始解码数据……</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据开头格式正确</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据解码成功</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 解码后的字节码：</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA0OjQ0OjE0IiwidWlkIjoiODFkZTU5YWUtMzQ4Mi00ZDFhLWJjNDMtN2NjMTJmOTI1ZTUxIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">INFO</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 收到实体对象：User</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">冉鹏峰</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UID</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">81de59ae-3482-4d1a-bc43-7cc12f925e51</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> birthday</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">Mon</span><span style="color:#A6ACCD;"> Jan </span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">04</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> CST </span><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 开始解码数据……</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据开头格式正确</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DecoderHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 数据解码成功</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEBUG</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 解码后的字节码：</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA0OjQ0OjE0IiwidWlkIjoiODFkZTU5YWUtMzQ4Mi00ZDFhLWJjNDMtN2NjMTJmOTI1ZTUxIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">01</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">51</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">INFO</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wisdom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">business</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BusinessHandler</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 收到实体对象：User</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">冉鹏峰</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UID</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">81de59ae-3482-4d1a-bc43-7cc12f925e51</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> birthday</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">Mon</span><span style="color:#A6ACCD;"> Jan </span><span style="color:#F78C6C;">14</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">04</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> CST </span><span style="color:#F78C6C;">2019</span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>服务器成功解析出来了三帧的数据，<code>BusinessHandler</code>的<code>channelRead</code>方法被调用了三次。</p><p>而抓到的数据包也确实是模拟的三帧数据黏在一个包中：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">+-------------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">  a  b  c  d  e  f </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">00000000</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">58</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> b5 7b </span><span style="color:#F78C6C;">22</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">63</span><span style="color:#A6ACCD;"> 6c </span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span><span style="color:#A6ACCD;"> 4e </span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6d</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C792EA;">X</span><span style="color:#89DDFF;">....{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000010| 22 3a 22 70 6f 6a 6f 2e 55 73 65 72 22 2c 22 6f |</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">o|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000020| 62 6a 65 63 74 22 3a 22 65 79 4a 75 59 57 31 6c |bject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1l|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000030| 49 6a 6f 69 35 59 61 4a 36 62 6d 50 35 62 4f 77 |Ijoi5YaJ6bmP5bOw|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000040| 49 69 77 69 59 57 64 6c 49 6a 6f 79 4e 43 77 69 |IiwiYWdlIjoyNCwi|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000050| 59 6d 6c 79 64 47 68 6b 59 58 6b 69 4f 69 49 79 |YmlydGhkYXkiOiIy|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000060| 4d 44 45 35 4c 7a 41 78 4c 7a 45 30 49 44 41 30 |MDE5LzAxLzE0IDA0|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000070| 4f 6a 51 30 4f 6a 45 30 49 69 77 69 64 57 6c 6b |OjQ0OjE0IiwidWlk|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000080| 49 6a 6f 69 4f 44 46 6b 5a 54 55 35 59 57 55 74 |IjoiODFkZTU5YWUt|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000090| 4d 7a 51 34 4d 69 30 30 5a 44 46 68 4c 57 4a 6a |MzQ4Mi00ZDFhLWJj|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000a0| 4e 44 4d 74 4e 32 4e 6a 4d 54 4a 6d 4f 54 49 31 |NDMtN2NjMTJmOTI1|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000b0| 5a 54 55 78 49 6e 30 3d 22 7d 【63】 58 00 00 00 b5 |ZTUxIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">cX</span><span style="color:#89DDFF;">....|</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">000000c0</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> 7b </span><span style="color:#F78C6C;">22</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">63</span><span style="color:#A6ACCD;"> 6c </span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span><span style="color:#A6ACCD;"> 4e </span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6d</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">22</span><span style="color:#A6ACCD;"> 3a </span><span style="color:#F78C6C;">22</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">70</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6f</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">po|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000d0| 6a 6f 2e 55 73 65 72 22 2c 22 6f 62 6a 65 63 74 |jo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000e0| 22 3a 22 65 79 4a 75 59 57 31 6c 49 6a 6f 69 35 |</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eyJuYW1lIjoi5|</span></span>
<span class="line"><span style="color:#C3E88D;">|000000f0| 59 61 4a 36 62 6d 50 35 62 4f 77 49 69 77 69 59 |YaJ6bmP5bOwIiwiY|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000100| 57 64 6c 49 6a 6f 79 4e 43 77 69 59 6d 6c 79 64 |WdlIjoyNCwiYmlyd|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000110| 47 68 6b 59 58 6b 69 4f 69 49 79 4d 44 45 35 4c |GhkYXkiOiIyMDE5L|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000120| 7a 41 78 4c 7a 45 30 49 44 41 30 4f 6a 51 30 4f |zAxLzE0IDA0OjQ0O|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000130| 6a 45 30 49 69 77 69 64 57 6c 6b 49 6a 6f 69 4f |jE0IiwidWlkIjoiO|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000140| 44 46 6b 5a 54 55 35 59 57 55 74 4d 7a 51 34 4d |DFkZTU5YWUtMzQ4M|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000150| 69 30 30 5a 44 46 68 4c 57 4a 6a 4e 44 4d 74 4e |i00ZDFhLWJjNDMtN|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000160| 32 4e 6a 4d 54 4a 6d 4f 54 49 31 5a 54 55 78 49 |2NjMTJmOTI1ZTUxI|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000170| 6e 30 3d 22 7d 【63】 58 00 00 00 b5 7b 22 63 6c 61 |n0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">cX</span><span style="color:#89DDFF;">....{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cla|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000180| 73 73 4e 61 6d 65 22 3a 22 70 6f 6a 6f 2e 55 73 |ssName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pojo.Us|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000190| 65 72 22 2c 22 6f 62 6a 65 63 74 22 3a 22 65 79 |er</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ey|</span></span>
<span class="line"><span style="color:#C3E88D;">|000001a0| 4a 75 59 57 31 6c 49 6a 6f 69 35 59 61 4a 36 62 |JuYW1lIjoi5YaJ6b|</span></span>
<span class="line"><span style="color:#C3E88D;">|000001b0| 6d 50 35 62 4f 77 49 69 77 69 59 57 64 6c 49 6a |mP5bOwIiwiYWdlIj|</span></span>
<span class="line"><span style="color:#C3E88D;">|000001c0| 6f 79 4e 43 77 69 59 6d 6c 79 64 47 68 6b 59 58 |oyNCwiYmlydGhkYX|</span></span>
<span class="line"><span style="color:#C3E88D;">|000001d0| 6b 69 4f 69 49 79 4d 44 45 35 4c 7a 41 78 4c 7a |kiOiIyMDE5LzAxLz|</span></span>
<span class="line"><span style="color:#C3E88D;">|000001e0| 45 30 49 44 41 30 4f 6a 51 30 4f 6a 45 30 49 69 |E0IDA0OjQ0OjE0Ii|</span></span>
<span class="line"><span style="color:#C3E88D;">|000001f0| 77 69 64 57 6c 6b 49 6a 6f 69 4f 44 46 6b 5a 54 |widWlkIjoiODFkZT|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000200| 55 35 59 57 55 74 4d 7a 51 34 4d 69 30 30 5a 44 |U5YWUtMzQ4Mi00ZD|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000210| 46 68 4c 57 4a 6a 4e 44 4d 74 4e 32 4e 6a 4d 54 |FhLWJjNDMtN2NjMT|</span></span>
<span class="line"><span style="color:#C3E88D;">|00000220| 4a 6d 4f 54 49 31 5a 54 55 78 49 6e 30 3d 22 7d |JmOTI1ZTUxIn0=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}|</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">00000230</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">【</span><span style="color:#F78C6C;">63</span><span style="color:#A6ACCD;">】                                              </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">c               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#89DDFF;">+--------+-------------------------------------------------+----------------+</span></span></code></pre></div><p>可以看到确实存在三个尾巴【63】</p><p>在netty4.x版本中，粘包问题确实被netty的<code>ByteToMessageDecoder</code>中的C<code>allDecode</code>方法中给处理掉了。</p><h5 id="拆包问题" tabindex="-1">拆包问题 <a class="header-anchor" href="#拆包问题" aria-label="Permalink to &quot;拆包问题&quot;">​</a></h5><p>这次还是将TcpClient中的编码器<code>EncoderHandler</code>注释掉，然后在<code>EchoHandler</code>的<code>channelActive</code>中模拟数据的拆包问题：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">public void channelActive(ChannelHandlerContext ctx) throws Exception {</span></span>
<span class="line"><span style="color:#A6ACCD;">    User user = new User();</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setBirthday(new Date());</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setUID(UUID.randomUUID().toString());</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setName(&quot;冉鹏峰&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setAge(24);</span></span>
<span class="line"><span style="color:#A6ACCD;">    DTObject dtObject = new DTObject();</span></span>
<span class="line"><span style="color:#A6ACCD;">    dtObject.setClassName(user.getClass().getName());</span></span>
<span class="line"><span style="color:#A6ACCD;">    dtObject.setObject(ByteUtils.InstanceObjectMapper().writeValueAsBytes(user));</span></span>
<span class="line"><span style="color:#A6ACCD;">    TcpProtocol tcpProtocol = new TcpProtocol();</span></span>
<span class="line"><span style="color:#A6ACCD;">    byte [] objectBytes=ByteUtils.InstanceObjectMapper().writeValueAsBytes(dtObject);</span></span>
<span class="line"><span style="color:#A6ACCD;">    tcpProtocol.setLen(objectBytes.length);</span></span>
<span class="line"><span style="color:#A6ACCD;">    tcpProtocol.setData(objectBytes);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ByteBuf buffer = ctx.alloc().buffer();</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getHeader());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeInt(tcpProtocol.getLen());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeBytes(Arrays.copyOfRange(tcpProtocol.getData(),0,tcpProtocol.getLen()/2));//只发送二分之一的数据包</span></span>
<span class="line"><span style="color:#A6ACCD;">    //模拟拆包</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.write(buffer);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.flush();</span></span>
<span class="line"><span style="color:#A6ACCD;">    Thread.sleep(3000);//模拟网络延时</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer = ctx.alloc().buffer();        </span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeBytes(Arrays.copyOfRange(tcpProtocol.getData(),tcpProtocol.getLen()/2,tcpProtocol.getLen()));//将剩下的二分之和尾巴发送过去</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getTail());</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.write(buffer);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.flush();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>运行结果：</p><p>首先是客户端这边：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:33 DEBUG [DEBUG] [id: 0x3b8cbbbb, L:/127.0.0.1:51138 - R:/127.0.0.1:8777] WRITE: 95B</span></span>
<span class="line"><span style="color:#A6ACCD;">         +-------------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">         |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000000| 58 00 00 00 b5 7b 22 63 6c 61 73 73 4e 61 6d 65 |X....{&quot;className|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000010| 22 3a 22 70 6f 6a 6f 2e 55 73 65 72 22 2c 22 6f |&quot;:&quot;pojo.User&quot;,&quot;o|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000020| 62 6a 65 63 74 22 3a 22 65 79 4a 75 59 57 31 6c |bject&quot;:&quot;eyJuYW1l|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000030| 49 6a 6f 69 35 59 61 4a 36 62 6d 50 35 62 4f 77 |Ijoi5YaJ6bmP5bOw|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000040| 49 69 77 69 59 57 64 6c 49 6a 6f 79 4e 43 77 69 |IiwiYWdlIjoyNCwi|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000050| 59 6d 6c 79 64 47 68 6b 59 58 6b 69 4f 69 49    |YmlydGhkYXkiOiI |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:33 DEBUG [DEBUG] [id: 0x3b8cbbbb, L:/127.0.0.1:51138 - R:/127.0.0.1:8777] FLUSH</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [DEBUG] [id: 0x3b8cbbbb, L:/127.0.0.1:51138 - R:/127.0.0.1:8777] WRITE: 92B</span></span>
<span class="line"><span style="color:#A6ACCD;">         +-------------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">         |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000000| 79 4d 44 45 35 4c 7a 41 78 4c 7a 45 30 49 44 41 |yMDE5LzAxLzE0IDA|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000010| 31 4f 6a 41 34 4f 6a 45 30 49 69 77 69 64 57 6c |1OjA4OjE0IiwidWl|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000020| 6b 49 6a 6f 69 4f 57 45 79 5a 6a 49 35 4d 6d 4d |kIjoiOWEyZjI5MmM|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000030| 74 4d 6a 4d 35 4f 43 30 30 5a 6a 6b 77 4c 57 46 |tMjM5OC00ZjkwLWF|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000040| 6b 5a 57 59 74 5a 6d 46 6c 4e 44 45 7a 5a 6a 55 |kZWYtZmFlNDEzZjU|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000050| 35 4e 32 45 33 49 6e 30 3d 22 7d 63             |5N2E3In0=&quot;}c    |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [DEBUG] [id: 0x3b8cbbbb, L:/127.0.0.1:51138 - R:/127.0.0.1:8777] FLUSH</span></span></code></pre></div><p>确实是将数据分成两包发送出去了</p><p>再看看服务端的输出日志：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:33 DEBUG [DEBUG] [id: 0x8e5811b3, L:/127.0.0.1:8777 - R:/127.0.0.1:51138] RECEIVED: 95B</span></span>
<span class="line"><span style="color:#A6ACCD;">         +-------------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">         |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000000| 58 00 00 00 b5 7b 22 63 6c 61 73 73 4e 61 6d 65 |X....{&quot;className|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000010| 22 3a 22 70 6f 6a 6f 2e 55 73 65 72 22 2c 22 6f |&quot;:&quot;pojo.User&quot;,&quot;o|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000020| 62 6a 65 63 74 22 3a 22 65 79 4a 75 59 57 31 6c |bject&quot;:&quot;eyJuYW1l|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000030| 49 6a 6f 69 35 59 61 4a 36 62 6d 50 35 62 4f 77 |Ijoi5YaJ6bmP5bOw|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000040| 49 69 77 69 59 57 64 6c 49 6a 6f 79 4e 43 77 69 |IiwiYWdlIjoyNCwi|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000050| 59 6d 6c 79 64 47 68 6b 59 58 6b 69 4f 69 49    |YmlydGhkYXkiOiI |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:33 DEBUG [org.wisdom.server.decoder.DecoderHandler] 开始解码数据……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:33 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据开头格式正确</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:33 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据长度不够，数据协议len长度为：181,数据包实际可读内容为：90正在等待处理拆包……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [DEBUG] [id: 0x8e5811b3, L:/127.0.0.1:8777 - R:/127.0.0.1:51138] RECEIVED: 92B</span></span>
<span class="line"><span style="color:#A6ACCD;">         +-------------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">         |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000000| 79 4d 44 45 35 4c 7a 41 78 4c 7a 45 30 49 44 41 |yMDE5LzAxLzE0IDA|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000010| 31 4f 6a 41 34 4f 6a 45 30 49 69 77 69 64 57 6c |1OjA4OjE0IiwidWl|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000020| 6b 49 6a 6f 69 4f 57 45 79 5a 6a 49 35 4d 6d 4d |kIjoiOWEyZjI5MmM|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000030| 74 4d 6a 4d 35 4f 43 30 30 5a 6a 6b 77 4c 57 46 |tMjM5OC00ZjkwLWF|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000040| 6b 5a 57 59 74 5a 6d 46 6c 4e 44 45 7a 5a 6a 55 |kZWYtZmFlNDEzZjU|</span></span>
<span class="line"><span style="color:#A6ACCD;">|00000050| 35 4e 32 45 33 49 6e 30 3d 22 7d 63             |5N2E3In0=&quot;}c    |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------+-------------------------------------------------+----------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [org.wisdom.server.decoder.DecoderHandler] 开始解码数据……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据开头格式正确</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据解码成功</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 DEBUG [org.wisdom.server.business.BusinessHandler] 解码后的字节码：{&quot;className&quot;:&quot;pojo.User&quot;,&quot;object&quot;:&quot;eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA1OjA4OjE0IiwidWlkIjoiOWEyZjI5MmMtMjM5OC00ZjkwLWFkZWYtZmFlNDEzZjU5N2E3In0=&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:08:36 INFO [org.wisdom.server.business.BusinessHandler] 收到实体对象：User{name=&#39;冉鹏峰&#39;, age=24, UID=&#39;9a2f292c-2398-4f90-adef-fae413f597a7&#39;, birthday=Mon Jan 14 05:08:00 CST 2019}</span></span></code></pre></div><p>在第一包数据，判断到bytebuf中的可读内容不够的时候，终止解码，并且从父类的<code>callDecode</code>中的while循环break出去，在父类的<code>channelRead</code>中等待下一包数据到来的时候将两包数据合并起来再次decode解码。</p><h5 id="最后测试下同时出现拆包、粘包的场景" tabindex="-1">最后测试下同时出现拆包、粘包的场景 <a class="header-anchor" href="#最后测试下同时出现拆包、粘包的场景" aria-label="Permalink to &quot;最后测试下同时出现拆包、粘包的场景&quot;">​</a></h5><p>还是将TcpClient中的编码器<code>EncoderHandler</code>注释掉，然后在<code>EchoHandler</code>的<code>ChannelActive</code>方法：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">public void channelActive(ChannelHandlerContext ctx) throws Exception {</span></span>
<span class="line"><span style="color:#A6ACCD;">    User user = new User();</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setBirthday(new Date());</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setUID(UUID.randomUUID().toString());</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setName(&quot;冉鹏峰&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    user.setAge(24);</span></span>
<span class="line"><span style="color:#A6ACCD;">    DTObject dtObject = new DTObject();</span></span>
<span class="line"><span style="color:#A6ACCD;">    dtObject.setClassName(user.getClass().getName());</span></span>
<span class="line"><span style="color:#A6ACCD;">    dtObject.setObject(ByteUtils.InstanceObjectMapper().writeValueAsBytes(user));</span></span>
<span class="line"><span style="color:#A6ACCD;">    TcpProtocol tcpProtocol = new TcpProtocol();</span></span>
<span class="line"><span style="color:#A6ACCD;">    byte [] objectBytes=ByteUtils.InstanceObjectMapper().writeValueAsBytes(dtObject);</span></span>
<span class="line"><span style="color:#A6ACCD;">    tcpProtocol.setLen(objectBytes.length);</span></span>
<span class="line"><span style="color:#A6ACCD;">    tcpProtocol.setData(objectBytes);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ByteBuf buffer = ctx.alloc().buffer();</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getHeader());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeInt(tcpProtocol.getLen());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeBytes(Arrays.copyOfRange(tcpProtocol.getData(),0,tcpProtocol.getLen()/2));//拆包，只发送一半的数据</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.write(buffer);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.flush();</span></span>
<span class="line"><span style="color:#A6ACCD;">    Thread.sleep(3000);</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer = ctx.alloc().buffer();</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeBytes(Arrays.copyOfRange(tcpProtocol.getData(),tcpProtocol.getLen()/2,tcpProtocol.getLen())); //拆包发送剩余的一半数据   </span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getTail());</span></span>
<span class="line"><span style="color:#A6ACCD;">    //模拟粘包的第二帧数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getHeader());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeInt(tcpProtocol.getLen());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeBytes(tcpProtocol.getData());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getTail());</span></span>
<span class="line"><span style="color:#A6ACCD;">    //模拟粘包的第三帧数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getHeader());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeInt(tcpProtocol.getLen());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeBytes(tcpProtocol.getData());</span></span>
<span class="line"><span style="color:#A6ACCD;">    buffer.writeByte(tcpProtocol.getTail());</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.write(buffer);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ctx.flush();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>最后直接查看服务端的输出结果：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:25 DEBUG [org.wisdom.server.decoder.DecoderHandler] 开始解码数据……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:25 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据开头格式正确</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:25 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据长度不够，数据协议len长度为：181,数据包实际可读内容为：90正在等待处理拆包……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [DEBUG] [id: 0xc46234aa, L:/127.0.0.1:8777 - R:/127.0.0.1:51466] RECEIVED: 466B</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 开始解码数据……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据开头格式正确</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据解码成功</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.business.BusinessHandler] 解码后的字节码：{&quot;className&quot;:&quot;pojo.User&quot;,&quot;object&quot;:&quot;eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA1OjE5OjE0IiwidWlkIjoiODE2Zjg2ZDItNDBhMS00MDRkLTgwMWItZmY1NzgxMTJhNjFmIn0=&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 INFO [org.wisdom.server.business.BusinessHandler] 收到实体对象：User{name=&#39;冉鹏峰&#39;, age=24, UID=&#39;816f86d2-40a1-404d-801b-ff578112a61f&#39;, birthday=Mon Jan 14 05:19:00 CST 2019}</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 开始解码数据……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据开头格式正确</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据解码成功</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.business.BusinessHandler] 解码后的字节码：{&quot;className&quot;:&quot;pojo.User&quot;,&quot;object&quot;:&quot;eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA1OjE5OjE0IiwidWlkIjoiODE2Zjg2ZDItNDBhMS00MDRkLTgwMWItZmY1NzgxMTJhNjFmIn0=&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 INFO [org.wisdom.server.business.BusinessHandler] 收到实体对象：User{name=&#39;冉鹏峰&#39;, age=24, UID=&#39;816f86d2-40a1-404d-801b-ff578112a61f&#39;, birthday=Mon Jan 14 05:19:00 CST 2019}</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 开始解码数据……</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据开头格式正确</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.decoder.DecoderHandler] 数据解码成功</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 DEBUG [org.wisdom.server.business.BusinessHandler] 解码后的字节码：{&quot;className&quot;:&quot;pojo.User&quot;,&quot;object&quot;:&quot;eyJuYW1lIjoi5YaJ6bmP5bOwIiwiYWdlIjoyNCwiYmlydGhkYXkiOiIyMDE5LzAxLzE0IDA1OjE5OjE0IiwidWlkIjoiODE2Zjg2ZDItNDBhMS00MDRkLTgwMWItZmY1NzgxMTJhNjFmIn0=&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-01-14 17:19:28 INFO [org.wisdom.server.business.BusinessHandler] 收到实体对象：User{name=&#39;冉鹏峰&#39;, age=24, UID=&#39;816f86d2-40a1-404d-801b-ff578112a61f&#39;, birthday=Mon Jan 14 05:19:00 CST 2019}</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>对于拆包、粘包只要配合netty的设计原则去实现代码，就能愉快且轻松的解决了。本例虽然通过DTObject包装了数据，避免解码时每增加一种对象类型，就要新增一个if判断的尴尬。但是仍然无法处理传输List、Map时候的场景。</p>`,94),e=[o];function t(c,r,D,y,F,C){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
