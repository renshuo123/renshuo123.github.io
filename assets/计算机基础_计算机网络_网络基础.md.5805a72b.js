import{_ as a,o as e,c as o,Q as t}from"./chunks/framework.c0bb1b40.js";const P=JSON.parse('{"title":"计算机网络基础知识","description":"","frontmatter":{},"headers":[],"relativePath":"计算机基础/计算机网络/网络基础.md","filePath":"计算机基础/计算机网络/网络基础.md"}'),i={name:"计算机基础/计算机网络/网络基础.md"},c=t('<h1 id="计算机网络基础知识" tabindex="-1">计算机网络基础知识 <a class="header-anchor" href="#计算机网络基础知识" aria-label="Permalink to &quot;计算机网络基础知识&quot;">​</a></h1><p>本文的组织架构如下：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sqe4eRZcBicDWjkficHBbbg8TupQ6WxQkNORCqu2pagibvSUCFdKrqax1Rw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>如果说计算机把我们从工业时代带到了信息时代，那么计算机网络就可以说把我们带到了网络时代。</p><blockquote><p>随着使用计算机人数的不断增加，计算机也经历了一系列的发展，从大型通用计算机 -&gt; 超级计算机 -&gt; 小型机 -&gt; 个人电脑 -&gt; 工作站 -&gt; 便携式电脑 -&gt; 智能手机终端等，都是这一过程的产物。计算机网络也逐渐从独立模式演变为了 网络互联模式</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sq8Gbt1Hm9VtFliaibM7w9tprMVPFnmIUs0pmpptZic70gKonp9zIF6UlhQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>可以看到，在独立模式下，每个人都需要排队等待其他人在一个机器上完成工作后，其他用户才能使用。这样的数据是单独管理的。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sq1VQfYEOQa6ic0Qn0qCgZsmufhlQHPsxyh8M22YBwqemFyO73o1asSJg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>现在切换到了网络互联模式，在这种模式下，每个人都能独立地使用计算机，甚至还会有一个服务器，来为老大哥、cxuan 和 sonsong 提供服务。这样的数据是集中管理的。</p><p>计算机网络按规模进行划分，有 <code>WAN(Wide Area Network, 广域网)</code> 和 <code>LAN(Local Area Network, 局域网)</code>。如下图所示：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqDhhVOObRjF7hrYP4cvKum0UgVKD3eBl6WeCw7gA6haGTqzr0SsM1ng/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>上面是局域网，一般用在狭小区域内的网络，一个社区、一栋楼、办公室经常使用局域网。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqQVbQB1106cuhqHn1JaUFu5yQXPIFLm74Nobu6wj8Vo4Sj0WxFiblQFA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>上面是广域网，距离较远的地方组成的网络一般是广域网。</p><blockquote><p>最初，只是固定的几台计算机相连在一起形成计算机网络。这种网络一般是私有的，这几台计算机之外的计算机无法访问。随着时代的发展，人们开始尝试在私有网络上搭建更大的私有网络，逐渐又发展演变为互联网，现在我们每个人几乎都能够享有互联网带来的便利。</p></blockquote><h2 id="计算机网络发展历程" tabindex="-1">计算机网络发展历程 <a class="header-anchor" href="#计算机网络发展历程" aria-label="Permalink to &quot;计算机网络发展历程&quot;">​</a></h2><h3 id="批处理" tabindex="-1">批处理 <a class="header-anchor" href="#批处理" aria-label="Permalink to &quot;批处理&quot;">​</a></h3><p>就和早期的计算机操作系统一样，最开始都要先经历<code>批处理(Batch Processing)</code>阶段，批处理的目的也是为了能让更多的人使用计算机。</p><p>批处理就是事先将数据装入卡带或者磁带，并且由计算机按照一定的顺序进行读入。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SquwHdVums2nGlmQSmxKnKib5ibukzs5iaT2wTUI6biaiaPYeiaohcZfC5pOlQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>当时这种计算机的价格比较昂贵，并不是每个人都能够使用的，这也就客观暗示着，只有专门的操作员才能使用计算机，用户把程序提交给操作员，由操作员排队执行程序，等一段时间后，用户再来提取结果。</p><p>这种计算机的高效性并没有很好的体现，甚至不如手动运算快。</p><h3 id="分时系统" tabindex="-1">分时系统 <a class="header-anchor" href="#分时系统" aria-label="Permalink to &quot;分时系统&quot;">​</a></h3><p>在批处理之后出现的就是分时系统了，分时系统指的是多个终端与同一个计算机连接，允许多个用户同时使用一台计算机。分时系统的出现实现了<code>一人一机</code>的目的，让用户感觉像是自己在使用计算机，实际上这是一种 <code>独占性</code> 的特性。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sq7ibmJMDCtr4dgd7nicOvqEsugDHvEXk8zibBhJ4RKIzXK3K7BXrUPibfcQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>分时系统出现以来，计算机的可用性得到了极大改善。分时系统的出现意味着计算机越来越贴近我们的生活。</p><blockquote><p>还有一点需要注意：分时系统的出现促进了像是 BASIC 这种人机交互语言的诞生。</p></blockquote><p>分时系统的出现，同时促进着计算机网络的出现。</p><h3 id="计算机通信" tabindex="-1">计算机通信 <a class="header-anchor" href="#计算机通信" aria-label="Permalink to &quot;计算机通信&quot;">​</a></h3><p>在分时系统中，每个终端与计算机相连，这种独占性的方式并不是计算机之间的通信，因为每个人还是在独立地使用计算机。</p><p>到了 20 世纪 70 年代，计算机性能有了高速发展，同时体积也变得越来越小，使用计算机的门槛变得更低，越来越多的用户可以使用计算机。</p><p>**没有一个计算机是信息孤岛，**促使着计算机网络的出现和发展。</p><h3 id="计算机网络的诞生" tabindex="-1">计算机网络的诞生 <a class="header-anchor" href="#计算机网络的诞生" aria-label="Permalink to &quot;计算机网络的诞生&quot;">​</a></h3><p>20 世纪 80 年代，一种能够互连多种计算机的网络随之诞生。它能够让各式各样的计算机相连，从大型的超级计算机或主机到小型电脑。</p><p>20 世纪 90 年代，真正实现了一人一机的环境，但是这种环境的搭建仍然价格不菲。与此同时，诸如<code>电子邮件(E-mail)</code>、<code>万维网(WWW,World Wide Web)</code> 等信息传播方式如雨后春笋般迎来了前所未有的发展，使得互联网从大到整个公司小到每个家庭内部，都得以广泛普及。</p><h3 id="计算机网络的高速发展" tabindex="-1">计算机网络的高速发展 <a class="header-anchor" href="#计算机网络的高速发展" aria-label="Permalink to &quot;计算机网络的高速发展&quot;">​</a></h3><p>现如今，越来越多的终端设备接入互联网，使互联网经历了前所未有的<code>高潮</code>，近年来 3G、4G、5G 通信技术的发展更是互联网高速发展的产物。</p><p>许多发展道路各不相同的网络技术也都正在向互联网靠拢。例如，曾经一直作为通信基础设施、支撑通信网络的电话网。随着互联网的发展，其地位也随着时间的推移被 <code>IP(Internet Protocol)</code> 网所取代，IP 也是互联网发展的产物。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqLASGicxicv8yeVF6yialVMy1fkCUAUbdH9oADVIiazdy9l5bJGHjRJQ6iaw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><h3 id="网络安全" tabindex="-1">网络安全 <a class="header-anchor" href="#网络安全" aria-label="Permalink to &quot;网络安全&quot;">​</a></h3><p>正如互联网也具有两面性，互联网的出现方便了用户，同时也方便了一些不法分子。互联网的便捷也带来了一些负面影响，计算机病毒的侵害、信息泄漏、网络诈骗层出不穷。</p><p>在现实生活中，通常情况下我们挨揍了会予以反击，但是在互联网中，你被不法分子攻击通常情况下是无力还击的，只能防御，因为还击需要你精通计算机和互联网，这通常情况下很多人办不到。</p><p>通常情况下，公司和企业容易被不法分子作为获利的对象，所以，作为公司或者企业，要想不受攻击或者防御攻击，需要建立安全的互联网连接。</p><h2 id="互联网协议" tabindex="-1">互联网协议 <a class="header-anchor" href="#互联网协议" aria-label="Permalink to &quot;互联网协议&quot;">​</a></h2><p>协议这个名词不仅局限于互联网范畴，也体现在日常生活中，比如情侣双方约定好在哪个地点吃饭，这个约定也是一种<code>协议</code>，比如你应聘成功了，企业会和你签订劳动合同，这种双方的雇佣关系也是一种 <code>协议</code>。注意，自己一个人对自己的约定不能称为协议，协议的前提条件必须是多人约定。</p><p>那么网络协议是什么呢？</p><p>*<em>网络协议就是网络中（包括互联网**）*<em>传递、管理信息的一些规范。如同人与人之间相互交流是需要遵循一定的规矩一样，计算机之间的相互通信需要共同遵守一定的规则，这些规则就称为网络协议</em></em>。</p><p>没有网络协议的互联网是混乱的，就和人类社会一样，人不能想怎么样就怎么样，你的行为约束是受到法律的约束的；那么互联网中的端系统也不能自己想发什么发什么，也是需要受到通信协议约束的。</p><p>我们一般都了解过 HTTP 协议， <strong>HTTP 是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范。</strong></p><p>但是互联网又不只有 HTTP 协议，它还有很多其他的比如 IP、TCP、UDP、DNS 协议等。下面是一些协议的汇总和介绍。</p><table><thead><tr><th style="text-align:left;">网络体系结构</th><th style="text-align:left;">协议</th><th style="text-align:left;">主要用途</th></tr></thead><tbody><tr><td style="text-align:left;">TCP/IP</td><td style="text-align:left;">HTTP、SMTP、TELNET、IP、ICMP、TCP、UDP 等</td><td style="text-align:left;">主要用于互联网、局域网</td></tr><tr><td style="text-align:left;">IPX/SPX</td><td style="text-align:left;">IPX、NPC、SPX</td><td style="text-align:left;">主要用于个人电脑局域网</td></tr><tr><td style="text-align:left;">AppleTalk</td><td style="text-align:left;">AEP、ADP、DDP</td><td style="text-align:left;">苹果公司现有产品互联</td></tr></tbody></table><p>ISO 在制定标准化的 OSI 之前，对网络体系结构相关的问题进行了充分的探讨，最终提出了作为通信协议设计指标的 OSI 参考模型。这一模型将通信协议中必要的功能分为了 7 层。通过这 7 层分层，使那些比较复杂的协议简单化。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqibTwbYdIh8oBMicGzKl2w1DwvvPgv0gIb5jh4GFiay0BsPjtFoIBqanKQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>在 OSI 标准模型中，每一层协议都接收由它下一层所提供的特定服务，并且负责为上一层提供服务，上层协议和下层协议之间通常会开放 <code>接口</code>，同一层之间的交互所遵守的约定叫做 <code>协议</code>。</p><h3 id="osi-标准模型" tabindex="-1">OSI 标准模型 <a class="header-anchor" href="#osi-标准模型" aria-label="Permalink to &quot;OSI 标准模型&quot;">​</a></h3><p>上图只是简单地介绍了一下层与层之间的通信规范和上层与下层的通信规范，并未介绍具体的网络协议分层，实际上，OSI 标准模型将复杂的协议整理并分为了易于理解的 7 层。如下图所示：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqgduHiaJibUWw73kM3odnOEVlicauroq9bwJ8SwDYqF2U4MoJ3VeqcYJQA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"><p>互联网的通信协议都对应了 7 层中的某一层，通过这一点，可以了解协议在整个网络模型中的作用，一般来说，各个分层的主要作用如下：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sq5B0RAMJwaTicopuxPlRia1x3uTEbBYD1SD4nLQM14EOibHJQV6pTjZUqQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><ul><li><code>应用层</code>：应用层是 OSI 标准模型的最顶层，是直接为应用进程提供服务的。其作用是在实现多个系统应用进程相互通信的同时，完成一系列业务处理所需的服务。包括文件传输、电子邮件远程登录和远端接口调用等协议。</li><li><code>表示层</code>: 表示层向上对应用进程服务，向下接收会话层提供的服务，表示层位于 OSI 标准模型的第六层，表示层的主要作用就是将设备的固有数据格式转换为网络标准传输格式。</li><li><code>会话层</code>：会话层位于 OSI 标准模型的第五层，它是建立在传输层之上，利用传输层提供的服务建立和维持会话。</li><li><code>传输层</code>：传输层位于 OSI 标准模型的第四层，它在整个 OSI 标准模型中起到了至关重要的作用。传输层涉及到两个节点之间的数据传输，向上层提供可靠的数据传输服务。传输层的服务一般要经历传输连接建立阶段、数据传输阶段、传输连接释放阶段 3 个阶段才算完成一个完整的服务过程。</li><li><code>网络层</code>：网络层位于 OSI 标准模型的第三层，它位于传输层和数据链路层的中间，将数据设法从源端经过若干个中间节点传送到另一端，从而向运输层提供最基本的端到端的数据传送服务。</li><li><code>数据链路层</code>：数据链路层位于物理层和网络层中间，数据链路层定义了在单个链路上如何传输数据。</li><li><code>物理层</code>：物理层是 OSI 标准模型中最低的一层，物理层是整个 OSI 协议的基础，就如同房屋的地基一样，物理层为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境。</li></ul><h3 id="tcp-ip-协议簇" tabindex="-1">TCP/IP 协议簇 <a class="header-anchor" href="#tcp-ip-协议簇" aria-label="Permalink to &quot;TCP/IP 协议簇&quot;">​</a></h3><p>TCP/IP 协议是我们程序员接触最多的协议，实际上，TCP/IP 又被称为 <code>TCP/IP 协议簇</code>，它并不特指单纯的 TCP 和 IP 协议，而是容纳了许许多多的网络协议。</p><p>OSI 模型共有七层，从下到上分别是物理层、数据链路层、网络层、运输层、会话层、表示层和应用层。但是这显然是有些复杂的，所以在TCP/IP协议中，它们被简化为了四个层次：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqiaAu3Unibiao8IWH1xIowmLQkSZmPjl3lXMznXicZmz98bbvZQFwnjpicDQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>和 OSI 七层网络协议的主要区别如下：</p><ul><li>应用层、表示层、会话层三个层次提供的服务相差不是很大，所以在 TCP/IP 协议中，它们被合并为应用层一个层次。</li><li>由于数据链路层和物理层的内容很相似，所以在 TCP/IP 协议中它们被归并在网络接口层一个层次里。</li></ul><blockquote><p>我们的主要研究对象就是 TCP/IP 的四层协议。</p></blockquote><p>下面聊一聊 TCP/IP 协议簇中都有哪些具体的协议。</p><h4 id="ip-协议" tabindex="-1">IP 协议 <a class="header-anchor" href="#ip-协议" aria-label="Permalink to &quot;IP 协议&quot;">​</a></h4><p>IP 是 <code>互联网协议(Internet Protocol)</code> ，位于网络层。IP是整个 TCP/IP 协议簇的核心，也是构成互联网的基础。IP 能够为运输层提供数据分发，同时也能够组装数据供运输层使用。它将多个单个网络连接成为一个互联网，这样能够提高网络的可扩展性，实现大规模的网络互联。二是分割顶层网络和底层网络之间的耦合关系。</p><h4 id="icmp-协议" tabindex="-1">ICMP 协议 <a class="header-anchor" href="#icmp-协议" aria-label="Permalink to &quot;ICMP 协议&quot;">​</a></h4><p>ICMP 协议是 <code>Internet Control Message Protocol</code>， ICMP 协议主要用于 IP 主机、路由器之间传递控制消息。ICMP 属于网络层的协议，当遇到 IP 无法访问目标、IP 路由器无法按照当前传输速率转发数据包时，会自动发送 ICMP 消息，从这个角度来说，ICMP 协议可以看作是 <code>错误侦测与回报机制</code>，让我们检查网络状况、也能够确保连线的准确性。</p><h4 id="arp-协议" tabindex="-1">ARP 协议 <a class="header-anchor" href="#arp-协议" aria-label="Permalink to &quot;ARP 协议&quot;">​</a></h4><p>ARP 协议是 <code>地址解析协议</code>，即 <code>Address Resolution Protocol</code>，它能够根据 IP 地址获取物理地址。主机发送信息时会将包含目标 IP 的 ARP 请求广播到局域网络上的所有主机，并接受返回消息，以此来确定物理地址。收到消息后的物理地址和 IP 地址会在 ARP 中缓存一段时间，下次查询的时候直接从 ARP 中查询即可。</p><h4 id="tcp-协议" tabindex="-1">TCP 协议 <a class="header-anchor" href="#tcp-协议" aria-label="Permalink to &quot;TCP 协议&quot;">​</a></h4><p>TCP 就是 <code>传输控制协议</code>，也就是 <code>Transmission Control Protocol</code>，它是一种面向连接的、可靠的、基于字节流的传输协议，TCP 协议位于传输层，TCP 协议是 TCP/IP 协议簇中的核心协议，它最大的特点就是提供可靠的数据交付。</p><p>TCP 的主要特点有 <strong>慢启动、拥塞控制、快速重传、可恢复</strong>。</p><h4 id="udp-协议" tabindex="-1">UDP 协议 <a class="header-anchor" href="#udp-协议" aria-label="Permalink to &quot;UDP 协议&quot;">​</a></h4><p>UDP 协议就是 <code>用户数据报协议</code>，也就是 <code>User Datagram Protocol</code>，UDP 也是一种传输层的协议，与 TCP 相比，UDP 提供一种不可靠的数据交付，也就是说，UDP 协议不保证数据是否到达目标节点，当报文发送之后，是无法得知其是否安全完整到达的。UDP 是一种无连接的协议，传输数据之前源端和终端无需建立连接，不对数据报进行检查与修改，无须等待对方的应答，会出现分组丢失、重复、乱序等现象。但是 UDP 具有较好的实时性，工作效率较 TCP 协议高。</p><h4 id="ftp-协议" tabindex="-1">FTP 协议 <a class="header-anchor" href="#ftp-协议" aria-label="Permalink to &quot;FTP 协议&quot;">​</a></h4><p>FTP 协议是 <code>文件传输协议</code>，英文全称是 <code>File Transfer Protocol</code>，应用层协议之一，是 TCP/IP 协议的重要组成之一，FTP 协议分为服务器和客户端两部分，FTP 服务器用来存储文件，FTP 客户端用来访问 FTP 服务器上的文件，FTP 的传输效率比较高，所以一般使用 FTP 来传输大文件。</p><h4 id="dns-协议" tabindex="-1">DNS 协议 <a class="header-anchor" href="#dns-协议" aria-label="Permalink to &quot;DNS 协议&quot;">​</a></h4><p>DNS 协议是 <code>域名系统协议</code>，英文全称是 <code>Domain Name System</code>，它也是应用层的协议之一，DNS 协议是一个将域名和 IP 相互映射的分布式数据库系统。DNS 缓存能够加快网络资源的访问。</p><h4 id="smtp-协议" tabindex="-1">SMTP 协议 <a class="header-anchor" href="#smtp-协议" aria-label="Permalink to &quot;SMTP 协议&quot;">​</a></h4><p>SMTP 协议是 <code>简单邮件传输协议</code>，英文全称是 <code>Simple Mail Transfer Protocol</code>，应用层协议之一，SMTP 主要是用作邮件收发协议，SMTP 服务器是遵循 SMTP 协议的发送邮件服务器，用来发送或中转用户发出的电子邮件。</p><h4 id="slip-协议" tabindex="-1">SLIP 协议 <a class="header-anchor" href="#slip-协议" aria-label="Permalink to &quot;SLIP 协议&quot;">​</a></h4><p>SLIP 协议是指<code>串行线路网际协议（Serial Line Internet Protocol)</code>，是在串行通信线路上支持 TCP/IP 协议的一种<code>点对点(Point-to-Point</code>)式的链路层通信协议。</p><h4 id="ppp-协议" tabindex="-1">PPP 协议 <a class="header-anchor" href="#ppp-协议" aria-label="Permalink to &quot;PPP 协议&quot;">​</a></h4><p>PPP 协议是 <code>Point to Point Protocol</code>，即点对点协议，是一种链路层协议，是在为同等单元之间传输数据包而设计的。设计目的主要是用来通过拨号或专线方式建立点对点连接发送数据，使其成为各种主机、网桥和路由器之间简单连接的一种共通的解决方案。</p><h2 id="网络核心概念" tabindex="-1">网络核心概念 <a class="header-anchor" href="#网络核心概念" aria-label="Permalink to &quot;网络核心概念&quot;">​</a></h2><h3 id="传输方式" tabindex="-1">传输方式 <a class="header-anchor" href="#传输方式" aria-label="Permalink to &quot;传输方式&quot;">​</a></h3><p>网络根据传输方式可以进行分类，一般分成两种 <strong>面向连接型和面向无连接型</strong>。</p><ul><li>面向连接型中，在发送数据之前，需要在主机之间建立一条通信线路。</li><li>面向无连接型则不要求建立和断开连接，发送方可在任何时候发送数据。接收端也不知道自己何时从哪里接收到数据。</li></ul><h3 id="分组交换" tabindex="-1">分组交换 <a class="header-anchor" href="#分组交换" aria-label="Permalink to &quot;分组交换&quot;">​</a></h3><p>在互联网应用中，每个终端系统都可以彼此交换信息，这种信息也被称为 <code>报文(Message)</code>。报文是一个集大成者，它可以包括你想要的任何东西，比如文字、数据、电子邮件、音频、视频等。为了从源目的地向端系统发送报文，需要把长报文切分为一个个小的数据块，这种数据块称为<code>分组(Packets)</code>，也就是说，报文是由一个个小块的分组组成。在端系统和目的地之间，每个分组都要经过<code>通信链路(communication links)</code> 和<code>分组交换机(switch packets)</code> ，分组要在端系统之间交互需要经过一定的时间，如果两个端系统之间需要交互的分组为 L 比特，链路的传输速率为 R 比特/秒，那么传输时间就是 L / R秒。</p><p>一个端系统需要经过交换机给其他端系统发送分组，当分组到达交换机时，交换机就能够直接进行转发吗？不是的，交换机可没有这么无私，你想让我帮你转发分组？好，首先你需要先把整个分组数据都给我，我再考虑给你发送的问题，这就是<code>存储转发传输</code>。</p><h4 id="存储转发传输" tabindex="-1">存储转发传输 <a class="header-anchor" href="#存储转发传输" aria-label="Permalink to &quot;存储转发传输&quot;">​</a></h4><p>存储转发传输指的就是交换机在转发分组的第一个比特前，必须要接收到整个分组。下面是一个存储转发传输的示意图，可以从图中窥出端倪。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqYVKcGORjBy6hSQvxDXEvtC94gkk2iaribdiclclrjPEgbfF2pHOAqAfLg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>由图可以看出，分组 1、2、3 向交换器进行分组传输，并且交换机已经收到了分组1 发送的比特，此时交换机会直接进行转发吗？答案是不会的，交换机会把你的分组先缓存在本地。这就和考试作弊一样，一个学霸要经过学渣 A 给学渣 B 传答案，学渣 A 在收到答案后，它可能直接把卷子传过去吗？学渣A 说，等我先把答案抄完（保存功能）后再把卷子给你。</p><h4 id="排队时延和分组丢失" tabindex="-1">排队时延和分组丢失 <a class="header-anchor" href="#排队时延和分组丢失" aria-label="Permalink to &quot;排队时延和分组丢失&quot;">​</a></h4><p>什么？你认为交换机只能和一条通信链路进行相连？那你就大错特错了，这可是交换机啊，怎么可能只有一条通信链路呢？</p><p>所以我相信你一定能想到这个问题，多个端系统同时给交换器发送分组，一定存在<code>顺序到达</code>和<code>排队</code>的问题。事实上，对于每条相连的链路，该分组交换机会有一个<code>输出缓存(output buffer)</code> 和 <code>输出队列(output queue)</code> 与之对应，它用于存储路由器准备发往每条链路的分组。如果到达的分组发现路由器正在接收其他分组，那么新到达的分组就会在输出队列中进行排队，这种等待分组转发所耗费的时间也被称为 <code>排队时延</code>，上面提到分组交换器在转发分组时会进行等待，这种等待被称为 <code>存储转发时延</code>，所以我们现在了解到的有两种时延，但是其实是有四种时延，后面会详细介绍。这些时延不是一成不变的，其变化程序取决于网络的拥塞程度。</p><p>因为队列是有容量限制的，当多条链路同时发送分组导致输出缓存无法接收超额的分组后，这些分组会丢失，这种情况被称为 <code>丢包(packet loss)</code>，到达的分组或者已排队的分组将会被丢弃。</p><p>下图说明了一个简单的分组交换网络。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqeXmDWI25kfGXfDhzbnWKc9jkfx7w79LDT5M8y04mAncddAa5KO70rg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>在上图中，分组由三位数据平板展示，平板的宽度表示着分组数据的大小。所有的分组都有相同的宽度，因此也就有相同的数据包大小。</p><p><strong>下面来一个情景模拟：</strong></p><p>假定主机 A 和 主机 B 要向主机 E 发送分组，主机 A 和 B 首先通过100 Mbps以太网链路将其数据包发送到第一台路由器，然后路由器将这些数据包定向到15 Mbps 的链路。如果在较短的时间间隔内，数据包到达路由器的速率（转换为每秒比特数）超过15 Mbps，则数据包在链路输出缓冲区中排队之前，路由器上会发生拥塞，然后再传输到链路上。例如，如果主机 A 和主机 B 背靠背同时发了5包数据，那么这些数据包中的大多数将花费一些时间在队列中等待。实际上，这种情况与许多普通情况完全相似，就像我们平常排队等候银行出纳员或在收费站前等候一样。</p><h4 id="转发表和路由器选择协议" tabindex="-1">转发表和路由器选择协议 <a class="header-anchor" href="#转发表和路由器选择协议" aria-label="Permalink to &quot;转发表和路由器选择协议&quot;">​</a></h4><p>我们刚刚讲过，路由器和多个通信线路进行相连，如果每条通信链路同时发送分组的话，可能会造成排队和丢包的情况，然后分组在队列中等待发送，现在我就有一个问题问你，队列中的分组发向哪里？这是由什么机制决定的？</p><p>换个角度想问题，路由的作用是什么？<strong>把不同端系统中的数据包进行存储和转发</strong> 。在因特网中，每个端系统都会有一个 <code>IP</code> 地址，当原主机发送一个分组时，在分组的首部都会加上原主机的 IP 地址。每一台路由器都会有一个 <code>转发表(forwarding table)</code>，当一个分组到达路由器后，路由器会检查分组的目的地址的一部分，并用目的地址搜索转发表，以找出适当的传送链路，然后映射成为输出链路进行转发。</p><p>那么问题来了，路由器内部是怎样设置转发表的呢？路由器内部也是具有<code>路由选择协议</code>的，用于自动设置转发表。</p><h3 id="电路交换" tabindex="-1">电路交换 <a class="header-anchor" href="#电路交换" aria-label="Permalink to &quot;电路交换&quot;">​</a></h3><p>在计算机网络中，另一种通过网络链路和路由进行数据传输的方式就是 <code>电路交换(circuit switching)</code>。电路交换在<code>资源预留</code>上与分组交换不同，什么意思呢？就是分组交换不会预留每次端系统之间交互分组的缓存和链路传输速率，所以每次都会进行排队传输；而电路交换会预留这些信息。</p><p>一个简单的例子帮助你理解：这就好比有两家餐馆，餐馆 A 需要预定而餐馆 B 不需要预订。对于可以预订的餐馆 A，我们必须先提前与其进行联系，但是当我们到达目的地时，我们能够立刻入座并选菜。而对于不需要预订的那家餐馆来说，你可能不需要提前联系，但是你必须承受到达目的地后需要排队的风险。</p><p>下面显示了一个电路交换网络。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqviaUQ3ia4YoMDW7GcffX9YbcicrAsl1MxvIWeIb8Ho5SJ3kibdaOtfeezw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"><p>在这个网络中，4条链路用于4台电路交换机。这些链路中的每一条都有4条电路，因此每条链路能支持4条并行的链接。每台主机都与一台交换机直接相连，当两台主机需要通信时，该网络在两台主机之间创建一条专用的 <code>端到端的链接(end-to-end connection)</code>。</p><h3 id="分组交换和电路交换的对比" tabindex="-1">分组交换和电路交换的对比 <a class="header-anchor" href="#分组交换和电路交换的对比" aria-label="Permalink to &quot;分组交换和电路交换的对比&quot;">​</a></h3><p>电路交换的支持者经常说分组交换不适合实时服务，因为它的端到端时延是不可预测的。而分组交换的支持者却认为分组交换提供了比电路交换更好的带宽共享；它比电路交换更加简单、更有效，实现成本更低。但是现在的趋势更多的是朝着分组交换的方向发展。</p><h3 id="分组交换网的时延、丢包和吞吐量" tabindex="-1">分组交换网的时延、丢包和吞吐量 <a class="header-anchor" href="#分组交换网的时延、丢包和吞吐量" aria-label="Permalink to &quot;分组交换网的时延、丢包和吞吐量&quot;">​</a></h3><p>因特网可以看成是一种基础设施，该基础设施为运行在端系统上的分布式应用提供服务。我们希望在计算机网络中任意两个端系统之间传递数据都不会造成数据丢失，然而这是一个极高的目标，实践中难以达到。所以，在实践中必须要限制端系统之间的 <code>吞吐量</code> 用来控制数据丢失。如果在端系统之间引入时延，也不能保证不会有丢失分组问题。所以我们从时延、丢包和吞吐量三个层面来看一下计算机网络。</p><h4 id="分组交换中的时延" tabindex="-1">分组交换中的时延 <a class="header-anchor" href="#分组交换中的时延" aria-label="Permalink to &quot;分组交换中的时延&quot;">​</a></h4><p>计算机网络中的分组从一台主机（源）出发，经过一系列路由器传输，在另一个端系统中结束它的历程。在这整个传输历程中，分组会涉及到四种最主要的时延：<strong>节点处理时延(nodal processing delay)、排队时延(queueing delay)、传输时延(transmission delay)和传播时延(propagation delay)</strong>。这四种时延加起来就是 <code>节点总时延(total nodal delay)</code>。</p><p>如果用 dproc dqueue dtrans dpop 分别表示处理时延、排队时延、传输时延和传播时延，则节点的总时延由以下公式决定: dnodal = dproc + dqueue + dtrans + dpop。</p><h4 id="时延的类型" tabindex="-1">时延的类型 <a class="header-anchor" href="#时延的类型" aria-label="Permalink to &quot;时延的类型&quot;">​</a></h4><p>下面是一幅典型的时延分布图，让我们从图中进行分析一下不同的时延类型。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqqbfLqniclOThWsl4Vngo2Gx728sblWJubLFoicYEibKZDBY3vmxY2vPHw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:67%;"><p>分组由端系统经过通信链路传输到路由器 A，路由器 A 检查分组头部以映射出适当的传输链路，并将分组送入该链路。仅当该链路没有其他分组正在传输并且没有其他分组排在该分组前面时，才能在这条链路上自由地传输该分组。如果该链路当前繁忙或者已经有其他分组排在该分组前面时，新到达的分组将会加入排队。下面我们分开讨论一下这四种时延。</p><p><strong>节点处理时延</strong></p><p><code>节点处理时延</code>分为两部分，第一部分是路由器会检查分组的首部信息；第二部分是决定将分组传输到哪条通信链路所需要的时间。一般高速网络的节点处理时延都在微妙级和更低的数量级。在这种处理时延完成后，分组会发往路由器的转发队列中。</p><p><strong>排队时延</strong></p><p>在队列排队转发过程中，分组需要在队列中等待发送，分组在等待发送过程中消耗的时间被称为<code>排队时延</code>。排队时延的长短取决于先于该分组到达正在队列中排队的分组数量。如果该队列是空的，并且当前没有正在传输的分组，那么该分组的排队时延就是 0。如果处于网络高发时段，那么链路中传输的分组比较多，那么分组的排队时延将延长。实际的排队时延也可以到达微秒级。</p><p><strong>传输时延</strong></p><p><code>队列</code> 是路由器所用的主要的数据结构。队列的特征就是先进先出，先到达食堂的先打饭。传输时延是理论情况下单位时间内的传输比特所消耗的时间。比如分组的长度是 L 比特，R 表示从路由器 A 到路由器 B 的传输速率。那么传输时延就是 L / R 。这是将所有分组推向该链路所需要的时间。真实情况下传输时延通常也在毫秒到微妙级。</p><p><strong>传播时延</strong></p><p>从链路的起点到路由器 B 传播所需要的时间就是 <code>传播时延</code>。一个比特以该链路的传播速率传播。该传播速率取决于链路的物理介质（双绞线、同轴电缆、光纤）。如果用公式来计算一下的话，该传播时延等于两台路由器之间的距离 / 传播速率。即传播速率是 <code>d/s</code> ，其中 d 是路由器 A 和 路由器 B 之间的距离，s 是该链路的传播速率。</p><h4 id="传输时延和传播时延的比较" tabindex="-1">传输时延和传播时延的比较 <a class="header-anchor" href="#传输时延和传播时延的比较" aria-label="Permalink to &quot;传输时延和传播时延的比较&quot;">​</a></h4><p>计算机网络中的传输时延和传播时延有时候难以区分，在这里解释一下，<code>传输时延</code>是路由器推出分组所需要的时间，它是分组长度和链路传输速率的函数，而与两台路由器之间的距离无关。而<code>传播时延</code>是一个比特从一台路由器传播到另一台路由器所需要的时间，它是两台路由器之间距离的倒数，而与分组长度和链路传输速率无关。从公式也可以看出来，传输时延是 <code>L/R</code>，也就是分组的长度 / 路由器之间传输速率。传播时延的公式是 <code>d/s</code>，也就是路由器之间的距离 / 传播速率。</p><h4 id="排队时延" tabindex="-1">排队时延 <a class="header-anchor" href="#排队时延" aria-label="Permalink to &quot;排队时延&quot;">​</a></h4><p>在这四种时延中，人们最感兴趣的时延或许就是排队时延了 dqueue。与其他三种时延（dproc、dtrans、dpop）不同的是，排队时延对不同的分组可能是不同的。例如，如果10个分组同时到达某个队列，第一个到达队列的分组没有排队时延，而最后到达的分组却要经受最大的排队时延（需要等待其他九个时延被传输）。</p><p>那么如何描述排队时延呢？或许可以从三个方面来考虑：<strong>流量到达队列的速率、链路的传输速率和到达流量的性质</strong>。即流量是周期性到达还是突发性到达，如果用 a 表示分组到达队列的平均速率（ a 的单位是分组/秒，即 pkt/s），前面说过 R 表示的是传输速率，所以能够从队列中推出比特的速率（以 bps 即 b/s 位单位）。假设所有的分组都是由 L 比特组成的，那么比特到达队列的平均速率是 La bps。那么比率 <code>La/R</code> 被称为<code>流量强度(traffic intensity)</code>，如果 La/R &gt; 1，则比特到达队列的平均速率超过从队列传输出去的速率，这种情况下队列趋向于无限增加。所以，<strong>设计系统时流量强度不能大于1</strong>。</p><p>现在考虑 La / R &lt;= 1 时的情况。流量到达的性质将影响排队时延。如果流量是<code>周期性</code>到达的，即每 L / R 秒到达一个分组，则每个分组将到达一个空队列中，不会有排队时延。如果流量是 <code>突发性</code> 到达的，则可能会有很大的平均排队时延。一般可以用下面这幅图表示平均排队时延与流量强度的关系。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqeUYtQ97QW9rpynBWRR9TvgsUJx31BGpGzQ9lQHN9Iic5ictkx1sO6NlA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:33%;"><p>横轴是 La/R 流量强度，纵轴是平均排队时延。</p><h4 id="丢包" tabindex="-1">丢包 <a class="header-anchor" href="#丢包" aria-label="Permalink to &quot;丢包&quot;">​</a></h4><p>我们在上述的讨论过程中描绘了一个公式，那就是 La/R 不能大于1，如果 La/R 大于1，那么到达的排队将会无穷大，而且路由器中的排队队列所容纳的分组是有限的，所以等到路由器队列堆满后，新到达的分组就无法被容纳，导致路由器 <code>丢弃(drop)</code> 该分组，即分组会 <code>丢失(lost)</code>。</p><h4 id="计算机网络中的吞吐量" tabindex="-1">计算机网络中的吞吐量 <a class="header-anchor" href="#计算机网络中的吞吐量" aria-label="Permalink to &quot;计算机网络中的吞吐量&quot;">​</a></h4><p>除了丢包和时延外，衡量计算机另一个至关重要的性能测度是<code>端到端的吞吐量</code>。假如从主机 A 向主机 B 传送一个大文件，那么在任何时刻主机 B 接收到该文件的速率就是 <code>瞬时吞吐量(instantaneous throughput)</code>。如果该文件由 F 比特组成，主机 B 接收到所有 F 比特用去 T 秒，则文件的传送<code>平均吞吐量(average throughput)</code> 是 F / T bps。</p><h3 id="单播、广播、多播和任播" tabindex="-1">单播、广播、多播和任播 <a class="header-anchor" href="#单播、广播、多播和任播" aria-label="Permalink to &quot;单播、广播、多播和任播&quot;">​</a></h3><p>在网络通信中，可以根据目标地址的数量对通信进行分类，可以分为 <strong>单播、广播、多播和任播</strong>。</p><h4 id="单播-unicast" tabindex="-1">单播(Unicast) <a class="header-anchor" href="#单播-unicast" aria-label="Permalink to &quot;单播(Unicast)&quot;">​</a></h4><p>单播最大的特点就是 1 对 1，早期的固定电话就是单播的一个例子。单播示意图如下：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqPZLlCRy3u7pIAgP6JOONFGBSEakyEkqBRGlSWOqMQdCQ6AxCaP61kw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:33%;"><h3 id="广播-broadcast" tabindex="-1">广播(Broadcast) <a class="header-anchor" href="#广播-broadcast" aria-label="Permalink to &quot;广播(Broadcast)&quot;">​</a></h3><p>我们一般小时候经常会跳<code>广播体操</code>，这就是广播的一个事例，主机和与它连接的所有端系统相连，主机将信号发送给所有的端系统。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqJxInLI00jJ7gKPViaOx6zHwR5e6vlVV1W2CSsWrwAibcvTXGARP3x1HQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:33%;"><h4 id="多播-multicast" tabindex="-1">多播(Multicast) <a class="header-anchor" href="#多播-multicast" aria-label="Permalink to &quot;多播(Multicast)&quot;">​</a></h4><p>多播与广播很类似，也是将消息发送给多个接收主机，不同之处在于多播需要限定在某一组主机作为接收端。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sq2t1IqX1PABdEXPmia3GkLujYmuFjZQBEbRTKLQZE8leScLUHh4Bd3zA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:33%;"><h4 id="任播-anycast" tabindex="-1">任播(Anycast) <a class="header-anchor" href="#任播-anycast" aria-label="Permalink to &quot;任播(Anycast)&quot;">​</a></h4><p>任播是在特定的多台主机中选出一个接收端的通信方式。虽然和多播很相似，但是行为与多播不同，任播是从许多目标机群中选出一台最符合网络条件的主机作为目标主机发送消息。然后被选中的特定主机将返回一个单播信号，然后再与目标主机进行通信。</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqibYiaSGGAibcfSyTjQmXbVmzfMKak9JSjmrWLrhLIthcicxnfJYEHqhqsQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"><h2 id="物理媒介" tabindex="-1">物理媒介 <a class="header-anchor" href="#物理媒介" aria-label="Permalink to &quot;物理媒介&quot;">​</a></h2><p>网络的传输是需要介质的。一个比特数据包从一个端系统开始传输，经过一系列的链路和路由器，从而到达另外一个端系统。这个比特会被转发了很多次，那么这个比特经过传输的过程所跨越的媒介就被称为<code>物理媒介(physical medium)</code>。</p><p>物理媒介有很多种，比如<strong>双绞铜线、同轴电缆、多模光纤榄、陆地无线电频谱和卫星无线电频谱</strong>。其实大致分为两种：引导性媒介和非引导性媒介。</p><h3 id="双绞铜线" tabindex="-1">双绞铜线 <a class="header-anchor" href="#双绞铜线" aria-label="Permalink to &quot;双绞铜线&quot;">​</a></h3><p>最便宜且最常用的引导性传输媒介就是<code>双绞铜线</code>，多年以来，它一直应用于电话网。从电话机到本地电话交换机的连线超过 99% 都是使用的双绞铜线，例如下面就是双绞铜线的实物图：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7Sq34JInGUAabNDwmX9aBhsFdo0vorfmB9yK4xS7mxJeKgktgqQ1Rgxibg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"><p>双绞铜线由两根绝缘的铜线组成，每根大约 1cm 粗，以规则的螺旋形状排列，通常许多双绞线捆扎在一起形成电缆，并在双绞线的外面套上保护层。一对电缆构成了一个通信链路。<code>无屏蔽双绞线</code>一般常用在局域网（LAN）中。</p><h3 id="同轴电缆" tabindex="-1">同轴电缆 <a class="header-anchor" href="#同轴电缆" aria-label="Permalink to &quot;同轴电缆&quot;">​</a></h3><p>与双绞线类似，同轴电缆也是由两个铜导体组成。下面是实物图：</p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqwKP6EBU1dHHwFsGIsOTXU5fDcyqvvYoD1Cu7dyFE3GE7F4q5I9mBtg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"><p>借助于这种结构以及特殊的绝缘体和保护层，同轴电缆能够达到较高的传输速率，同轴电缆普遍应用在电缆电视系统中。同轴电缆是一种引导型共享媒介。</p><h3 id="光纤" tabindex="-1">光纤 <a class="header-anchor" href="#光纤" aria-label="Permalink to &quot;光纤&quot;">​</a></h3><p>光纤是一种细而柔软的、能够引导光脉冲的媒介，每个脉冲表示一个比特。一根光纤能够支持极高的比特率，高达数十甚至数百 Gbps。它们不受电磁干扰。光纤是一种引导型物理媒介，下面是光纤的实物图：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaQUkM2ib9WWjiabWHbbF0B7SqUtuXeuKpyD7TibGoWh26jWQVle2EEg9gc5XO9ApPWpsGnphaoB7Qsrg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:33%;"><p>一般长途电话网络全面使用光纤，光纤也广泛应用于因特网的主干。</p><h3 id="陆地无线电信道" tabindex="-1">陆地无线电信道 <a class="header-anchor" href="#陆地无线电信道" aria-label="Permalink to &quot;陆地无线电信道&quot;">​</a></h3><p>无线电信道承载电磁频谱中的信号。它不需要安装物理线路，并具有穿透墙壁、提供与移动用户的连接以及长距离承载信号的能力。</p><h3 id="卫星无线电信道" tabindex="-1">卫星无线电信道 <a class="header-anchor" href="#卫星无线电信道" aria-label="Permalink to &quot;卫星无线电信道&quot;">​</a></h3><p>一颗卫星电信道连接地球上的两个或多个微博发射器/接收器，它们称为地面站。通信中经常使用两类卫星：同步卫星和近地卫星。</p>',183),p=[c];function l(r,d,m,n,b,s){return e(),o("div",null,p)}const x=a(i,[["render",l]]);export{P as __pageData,x as default};
