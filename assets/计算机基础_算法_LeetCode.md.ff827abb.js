import{_ as e,o as a,c as t,S as i}from"./chunks/framework.b12503b9.js";const u=JSON.parse('{"title":"LeetCode应该怎么刷","description":"","frontmatter":{},"headers":[],"relativePath":"计算机基础/算法/LeetCode.md","filePath":"计算机基础/算法/LeetCode.md"}'),l={name:"计算机基础/算法/LeetCode.md"},o=i('<h1 id="leetcode应该怎么刷" tabindex="-1">LeetCode应该怎么刷 <a class="header-anchor" href="#leetcode应该怎么刷" aria-label="Permalink to &quot;LeetCode应该怎么刷&quot;">​</a></h1><p>很多小伙伴刚开始刷LeetCode时，可能会吃力，经常刷了忘，忘了再刷，进入死循环，刷题效率很差。</p><p>其实，刷题也要讲究技巧，掌握了正确的刷题方法，便能事半功倍~</p><p>下面分享几点我自己的刷题经验，希望能帮助到大家！</p><p>主要有以下3点技巧：</p><ol><li><strong>按题目分类来刷</strong>。</li><li><strong>难度要循序渐进</strong>。</li><li><strong>做好总结</strong>。</li></ol><h2 id="按题目分类刷题" tabindex="-1">按题目分类刷题 <a class="header-anchor" href="#按题目分类刷题" aria-label="Permalink to &quot;按题目分类刷题&quot;">​</a></h2><p>LeetCode上面的题目都有进行<strong>分类</strong>，建议在一个时间段只刷同一类型的题目，可以更全面的认识这一类型的数据结构or算法，以加深对此类题型的理解。就好比练功夫，前期把一些基本招式都熟悉掌握，后面再串通这些招式，融会贯通。</p><p>我个人也是比较习惯按照分类来刷题，自我感觉效果还可以。</p><p>我将LeetCode题目进行了整理分类，大家可以参考下：</p><h3 id="数组操作" tabindex="-1">数组操作 <a class="header-anchor" href="#数组操作" aria-label="Permalink to &quot;数组操作&quot;">​</a></h3><ul><li>LeetCode54 螺旋矩阵</li><li>LeetCode76 最小覆盖子串</li><li>LeetCode75 颜色分类</li><li>LeetCode73 矩阵置零</li><li>LeetCode384 打乱数组</li><li>LeetCode581 最短无序连续子数组</li><li>LeetCode945 使数组唯一的最小增量</li></ul><h3 id="链表操作" tabindex="-1">链表操作 <a class="header-anchor" href="#链表操作" aria-label="Permalink to &quot;链表操作&quot;">​</a></h3><ul><li>LeetCode206 反转链表</li><li>LeetCode19 删除链表的倒数第N个节点</li><li>LeetCode25 k个一组翻转链表</li><li>LeetCode141 环形链表</li><li>LeetCode142 环形链表Ⅱ</li><li>LeetCode61 旋转链表</li><li>LeetCode138 复制带随机指针的链表</li><li>LeetCode160 相交链表</li><li>LeetCode707 设计链表</li></ul><h3 id="栈" tabindex="-1">栈 <a class="header-anchor" href="#栈" aria-label="Permalink to &quot;栈&quot;">​</a></h3><ul><li>LeetCode20 有效的括号</li><li>LeetCode32 最长有效括号</li><li>LeetCode155 最小栈</li><li>LeetCode224 基本计算器</li><li>LeetCode232 用栈实现队列</li><li>LeetCode316 去除重复字母</li></ul><h3 id="树的遍历" tabindex="-1">树的遍历 <a class="header-anchor" href="#树的遍历" aria-label="Permalink to &quot;树的遍历&quot;">​</a></h3><ul><li>LeetCode94 二叉树的中序遍历</li><li>LeetCode102 二叉树的层次遍历</li><li>LeetCode110 平衡二叉树</li><li>LeetCode144 二叉树的前序遍历</li><li>LeetCode145 二叉树的后序遍历</li></ul><h3 id="二叉搜索树" tabindex="-1">二叉搜索树 <a class="header-anchor" href="#二叉搜索树" aria-label="Permalink to &quot;二叉搜索树&quot;">​</a></h3><ul><li>LeetCode98 验证二叉搜索树</li><li>LeetCode450 删除二叉搜索树中的节点</li><li>LeetCode701 二叉搜索树中的插入操作</li></ul><h3 id="递归" tabindex="-1">递归 <a class="header-anchor" href="#递归" aria-label="Permalink to &quot;递归&quot;">​</a></h3><ul><li>LeetCode21 合并两个有序链表</li><li>LeetCode101 对称二叉树</li><li>LeetCode104 二叉树的最大深度</li><li>LeetCode226 翻转二叉树</li><li>LeetCode236 二叉树的最近公共祖先</li></ul><h3 id="双指针-滑动窗口" tabindex="-1">双指针/滑动窗口 <a class="header-anchor" href="#双指针-滑动窗口" aria-label="Permalink to &quot;双指针/滑动窗口&quot;">​</a></h3><ul><li>LeetCode3 无重复字符的最长子串</li><li>LeetCode11 盛最多水的容器</li><li>LeetCode15 三数之和</li><li>LeetCode16 最接近的三数之和</li><li>LeetCode26 删除排序数组中的重复项</li><li>LeetCode42 接雨水</li><li>LeetCode121 买卖股票的最佳时机</li><li>LeetCode209 长度最小的子数组</li></ul><h3 id="快慢指针遍历" tabindex="-1">快慢指针遍历 <a class="header-anchor" href="#快慢指针遍历" aria-label="Permalink to &quot;快慢指针遍历&quot;">​</a></h3><ul><li>LeetCode141 环形链表</li><li>LeetCode202 快乐数</li><li>LeetCode876 链表的中间结点</li></ul><h3 id="动态规划" tabindex="-1">动态规划 <a class="header-anchor" href="#动态规划" aria-label="Permalink to &quot;动态规划&quot;">​</a></h3><ul><li>LeetCode5 最长回文子串</li><li>LeetCode53 最大子序和</li><li>LeetCode62 不同路径</li><li>LeetCode64 最小路径和</li><li>LeetCode70 爬楼梯</li><li>LeetCode118 杨辉三角</li><li>LeetCode300 最长上升子序列</li><li>LeetCode1143 最长公共子序列</li></ul><h3 id="回溯算法" tabindex="-1">回溯算法 <a class="header-anchor" href="#回溯算法" aria-label="Permalink to &quot;回溯算法&quot;">​</a></h3><ul><li>LeetCode10 正则表达式匹配</li><li>LeetCode22 括号生成</li><li>LeetCode40 组合总和2</li><li>LeetCode46 全排列</li></ul><h3 id="贪心算法" tabindex="-1">贪心算法 <a class="header-anchor" href="#贪心算法" aria-label="Permalink to &quot;贪心算法&quot;">​</a></h3><ul><li>LeetCode 11. 盛最多水的容器</li><li>LeetCode 406. 根据身高重建队列</li><li>LeetCode 55. 跳跃游戏</li><li>LeetCode 122. 买卖股票的最佳时机 II</li><li>LeetCode 309. 最佳买卖股票时机含冷冻期</li><li>LeetCode 714. 买卖股票的最佳时机含手续费</li></ul><h3 id="并查集" tabindex="-1">并查集 <a class="header-anchor" href="#并查集" aria-label="Permalink to &quot;并查集&quot;">​</a></h3><ul><li>LeetCode200 岛屿的个数</li><li>LeetCode547 省份数量</li></ul><h3 id="位运算" tabindex="-1">位运算 <a class="header-anchor" href="#位运算" aria-label="Permalink to &quot;位运算&quot;">​</a></h3><ul><li>LeetCode52 N皇后Ⅱ</li><li>LeetCode338 比特位计数</li><li>LeetCode191 位1的个数</li><li>LeetCode231 2的幂</li></ul><h2 id="难度要循序渐进" tabindex="-1">难度要循序渐进 <a class="header-anchor" href="#难度要循序渐进" aria-label="Permalink to &quot;难度要循序渐进&quot;">​</a></h2><p>这一点是针对初学者来说的，切记一上来就干hard级别的题目，会让你怀疑人生的。。。</p><p>正确的做法是<strong>循序渐进</strong>，从容易到中等，再过渡到困难级别。不过国内大厂考察算法，一般都是中等难度，困难级别的应该很少考察。</p><h2 id="做好总结" tabindex="-1">做好总结 <a class="header-anchor" href="#做好总结" aria-label="Permalink to &quot;做好总结&quot;">​</a></h2><p><strong>多做总结！多做总结！多做总结！</strong></p><p><strong>做好总结很重要</strong>，特别是对于没思路的题目，看了其他大佬的解法之后，多思考有哪些题目也是类似解法，这种题目的关键解题步骤，把自己的理解写下来，方便自己日后查看。</p><p>虽然总结可能会花费你半个钟甚至更多的时间，但是不总结的话，下次你遇到这个题目，可能会花更多的时间去思考、解答。</p><h1 id="github-高质量算法项目推荐" tabindex="-1">GitHub 高质量算法项目推荐 <a class="header-anchor" href="#github-高质量算法项目推荐" aria-label="Permalink to &quot;GitHub 高质量算法项目推荐&quot;">​</a></h1><h2 id="leetcode-master" tabindex="-1">LeetCode Master <a class="header-anchor" href="#leetcode-master" aria-label="Permalink to &quot;LeetCode Master&quot;">​</a></h2><blockquote><p>代码随想题录，LeetCode刷题攻略，200道经典刷题顺序，共60w字的详细指导图解，视频难点剖析，50余张思维图，支持C++，Java，Python，Go，JavaScript 等多语言版本。</p></blockquote><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee20RPGATEfGR4UEaJJXVbnCTCQpw6sz6mEIMibPK3vHHWwicd6ns8iaEwHQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️32.8k）：**<a href="https://github.com/youngyangyang04/leetcode-master" target="_blank" rel="noreferrer">https://github.com/youngyangyang04/leetcode-master</a></p><h2 id="javascript-算法和数据结构" tabindex="-1">JavaScript 算法和数据结构 <a class="header-anchor" href="#javascript-算法和数据结构" aria-label="Permalink to &quot;JavaScript 算法和数据结构&quot;">​</a></h2><p>Github 上最火的 JavaScript 描述的算法和数据结构项目，每种算法和数据结构都有自己的 README，包含相关说明和链接，提供了中文版本。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee2USQibfbCmydnSQkKSWNOaDFM8AOUuYcduAr4x9VbbDtpctu0g3lrwfA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️154k）：**<a href="https://github.com/trekhleb/javascript-algorithms" target="_blank" rel="noreferrer">https://github.com/trekhleb/javascript-algorithms</a></p><h2 id="algorithm-visualizer" tabindex="-1">Algorithm Visualizer <a class="header-anchor" href="#algorithm-visualizer" aria-label="Permalink to &quot;Algorithm Visualizer&quot;">​</a></h2><p>Algorithm Visualizer 是一个交互式在线平台，可以从代码中可视化算法。目前支持的算法包括回溯法、加密算法、动态规划、图搜索、贪婪算法、搜索算法、排序算法等。当选择算法时，中间就会动态演示执行过程，日志输出区记录每一步的执行结果。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee2gmAYr7pxDhPqxrRBf9LzJJ8etFrecxXrn31XDvOy8hB5jMZLZThOag/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️39.3k）：**<a href="https://github.com/algorithm-visualizer/algorithm-visualizer" target="_blank" rel="noreferrer">https://github.com/algorithm-visualizer/algorithm-visualizer</a></p><h2 id="leetcode" tabindex="-1">Leetcode <a class="header-anchor" href="#leetcode" aria-label="Permalink to &quot;Leetcode&quot;">​</a></h2><p>本项目包含 LeetCode、《剑指 Offer（第 2 版）》、《剑指 Offer（专项突击版）》、《程序员面试金典（第 6 版）》等题目的相关题解。所有题解均由多种编程语言实现，包括但不限于：Java、Python、C++、Go、TypeScript、Rust。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee2Bblvj9Xu93vLqNquHAxET9VCibEtb2YJAblLibPMNPQLUcc9Q3mYdOvQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️32.8k）：**<a href="https://github.com/doocs/leetcode" target="_blank" rel="noreferrer">https://github.com/doocs/leetcode</a></p><h2 id="leetcode-javascript" tabindex="-1">LeetCode JavaScript <a class="header-anchor" href="#leetcode-javascript" aria-label="Permalink to &quot;LeetCode JavaScript&quot;">​</a></h2><p>前端攻城狮从零入门算法的宝藏题库，根据知名算法老师的经验总结了 100+ 道 LeetCode 力扣的经典题型 JavaScript 题解和思路。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee2x77vzW8DtzlB2LtC0bxLEVfrCV3gabrnvMribFLMRpMoVqR1vDnRQibg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️1.6k）：**<a href="https://github.com/sl1673495/leetcode-javascript" target="_blank" rel="noreferrer">https://github.com/sl1673495/leetcode-javascript</a></p><h2 id="labuladong-的算法小抄" tabindex="-1">labuladong 的算法小抄 <a class="header-anchor" href="#labuladong-的算法小抄" aria-label="Permalink to &quot;labuladong 的算法小抄&quot;">​</a></h2><p>本项目总共 60 多篇原创文章，都是基于 LeetCode 的题目，涵盖了所有题型和技巧，而且一定要做到<strong>举一反三，通俗易懂。</strong></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee21YZkwa2OQq8xD6eVf5pCLr5ZwGGaLeicTUbgjnC8U0RYIFtz2XUo6FA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️111k）：**<a href="https://github.com/labuladong/fucking-algorithm" target="_blank" rel="noreferrer">https://github.com/labuladong/fucking-algorithm</a></p><h2 id="leetcodetop" tabindex="-1">LeetcodeTop <a class="header-anchor" href="#leetcodetop" aria-label="Permalink to &quot;LeetcodeTop&quot;">​</a></h2><p>CodeTop 上汇总了各大互联网公司容易考察的高频 leetcode 题，支持按照公司、部门、岗位组合查询。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/EO58xpw5UMNnj73jicL56aDdsFIbb1ee29U1g91eMDibGJ1FsiaZAdYqvAgbcFz2K2FeCwCf7q09tW0ce09f1GVaw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>**Github（⭐️15.6k）：**<a href="https://github.com/afatcoder/LeetcodeTop" target="_blank" rel="noreferrer">https://github.com/afatcoder/LeetcodeTop</a></p>',72),r=[o];function d(h,p,c,n,s,b){return a(),t("div",null,r)}const L=e(l,[["render",d]]);export{u as __pageData,L as default};
